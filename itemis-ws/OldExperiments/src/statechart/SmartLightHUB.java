/* Generated by itemis CREATE code generator. */
package statechart;

import com.yakindu.core.IEventDriven;
import com.yakindu.core.IStatemachine;
import com.yakindu.core.ITimed;
import com.yakindu.core.ITimerService;
import com.yakindu.core.rx.Observable;
import java.util.LinkedList;
import java.util.Queue;
import statechart.Hub_PowerManager;
import statechart.Network_Component;
import statechart.SmartLightSystem;

public class SmartLightHUB implements ITimed, IEventDriven {
	public static class HUB {
		private SmartLightHUB parent;
		
		public HUB(SmartLightHUB parent) {
			this.parent = parent;
		}
		private boolean turnONSystems;
		
		
		public void raiseTurnONSystems() {
			parent.inEventQueue.add(() -> {
				turnONSystems = true;
			});
			parent.runCycle();
		}
		
		private boolean turnOFFSystems;
		
		
		public void raiseTurnOFFSystems() {
			parent.inEventQueue.add(() -> {
				turnOFFSystems = true;
			});
			parent.runCycle();
		}
		
		private boolean allSystemsOFF;
		
		
		protected void raiseAllSystemsOFF() {
			allSystemsOFF = true;
			allSystemsOFFObservable.next(null);
		}
		
		private Observable<Void> allSystemsOFFObservable = new Observable<Void>();
		
		public Observable<Void> getAllSystemsOFF() {
			return allSystemsOFFObservable;
		}
		
		private boolean allSystemsON;
		
		
		protected void raiseAllSystemsON() {
			allSystemsON = true;
			allSystemsONObservable.next(null);
		}
		
		private Observable<Void> allSystemsONObservable = new Observable<Void>();
		
		public Observable<Void> getAllSystemsON() {
			return allSystemsONObservable;
		}
		
	}
	
	public static class Power {
		private long index;
		
		public long getIndex() {
			return index;
		}
		
		public void setIndex(long value) {
			this.index = value;
		}
		
		private long total;
		
		public long getTotal() {
			return total;
		}
		
		public void setTotal(long value) {
			this.total = value;
		}
		
		private long threshold;
		
		public long getThreshold() {
			return threshold;
		}
		
		public void setThreshold(long value) {
			this.threshold = value;
		}
		
		private boolean thresholdReached;
		
		public boolean getThresholdReached() {
			return thresholdReached;
		}
		
		public void setThresholdReached(boolean value) {
			this.thresholdReached = value;
		}
		
	}
	
	public static class Network {
		private SmartLightHUB parent;
		
		public Network(SmartLightHUB parent) {
			this.parent = parent;
		}
		private boolean error;
		
		
		public void raiseError() {
			parent.inEventQueue.add(() -> {
				error = true;
			});
			parent.runCycle();
		}
		
		private boolean connect;
		
		
		public void raiseConnect() {
			parent.inEventQueue.add(() -> {
				connect = true;
			});
			parent.runCycle();
		}
		
		private boolean connection;
		
		public boolean getConnection() {
			return connection;
		}
		
		public void setConnection(boolean value) {
			this.connection = value;
		}
		
	}
	
	public static class System1 {
		private SmartLightHUB parent;
		
		public System1(SmartLightHUB parent) {
			this.parent = parent;
		}
		private boolean toggle;
		
		
		public void raiseToggle() {
			parent.inEventQueue.add(() -> {
				toggle = true;
			});
			parent.runCycle();
		}
		
		private boolean isON;
		
		
		protected void raiseIsON() {
			isON = true;
			isONObservable.next(null);
		}
		
		private Observable<Void> isONObservable = new Observable<Void>();
		
		public Observable<Void> getIsON() {
			return isONObservable;
		}
		
		private boolean isOFF;
		
		
		protected void raiseIsOFF() {
			isOFF = true;
			isOFFObservable.next(null);
		}
		
		private Observable<Void> isOFFObservable = new Observable<Void>();
		
		public Observable<Void> getIsOFF() {
			return isOFFObservable;
		}
		
		private boolean error;
		
		
		public void raiseError() {
			parent.inEventQueue.add(() -> {
				error = true;
			});
			parent.runCycle();
		}
		
		private boolean working;
		
		
		public void raiseWorking() {
			parent.inEventQueue.add(() -> {
				working = true;
			});
			parent.runCycle();
		}
		
	}
	
	public static class System2 {
		private SmartLightHUB parent;
		
		public System2(SmartLightHUB parent) {
			this.parent = parent;
		}
		private boolean toggle;
		
		
		public void raiseToggle() {
			parent.inEventQueue.add(() -> {
				toggle = true;
			});
			parent.runCycle();
		}
		
		private boolean isON;
		
		
		protected void raiseIsON() {
			isON = true;
			isONObservable.next(null);
		}
		
		private Observable<Void> isONObservable = new Observable<Void>();
		
		public Observable<Void> getIsON() {
			return isONObservable;
		}
		
		private boolean isOFF;
		
		
		protected void raiseIsOFF() {
			isOFF = true;
			isOFFObservable.next(null);
		}
		
		private Observable<Void> isOFFObservable = new Observable<Void>();
		
		public Observable<Void> getIsOFF() {
			return isOFFObservable;
		}
		
		private boolean error;
		
		
		public void raiseError() {
			parent.inEventQueue.add(() -> {
				error = true;
			});
			parent.runCycle();
		}
		
		private boolean working;
		
		
		public void raiseWorking() {
			parent.inEventQueue.add(() -> {
				working = true;
			});
			parent.runCycle();
		}
		
	}
	
	protected HUB hUB;
	
	protected Power power;
	
	protected Network network;
	
	protected System1 system1;
	
	protected System2 system2;
	
	public enum State {
		SMARTLIGHTHUBSYSTEM_1_0_HUBOFF,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_NO_CONNECTION,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_CONNECTED,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING,
		SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR,
		$NULLSTATE$
	};
	
	private final State[] stateVector = new State[6];
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[4];
	
	private Queue<Runnable> inEventQueue = new LinkedList<Runnable>();
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		return isExecuting;
	}
	
	protected void setIsExecuting(boolean value) {
		this.isExecuting = value;
	}
	private long stateConfVectorPosition;
	
	protected long getStateConfVectorPosition() {
		return stateConfVectorPosition;
	}
	
	protected void setStateConfVectorPosition(long value) {
		this.stateConfVectorPosition = value;
	}
	public SmartLightHUB() {
		hUB = new HUB(this);
		power = new Power();
		network = new Network(this);
		system1 = new System1(this);
		system2 = new System2(this);
		for (int i = 0; i < 6; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		
		/* Default init sequence for statechart SmartLightHUB */
		setLED1(null);
		setLED2(null);
		setWiFi(null);
		setInUSE(false);
		setPowerManager(null);
		setTotalSystemsON(0l);
		power.setIndex(0l);
		power.setTotal(0l);
		power.setThreshold(15l);
		power.setThresholdReached(false);
		network.setConnection(false);
		
		isExecuting = false;
	}
	
	public void enter() {
		/* Activates the state machine. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default enter sequence for statechart SmartLightHUB */
		enterSequence_SmartLightHubSystem_1_0_default();
		isExecuting = false;
	}
	
	public void exit() {
		/* Deactivates the state machine. */
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default exit sequence for statechart SmartLightHUB */
		exitSequence_SmartLightHubSystem_1_0();
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$||stateVector[1] != State.$NULLSTATE$||stateVector[2] != State.$NULLSTATE$||stateVector[3] != State.$NULLSTATE$||stateVector[4] != State.$NULLSTATE$||stateVector[5] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public boolean isFinal() {
		return false;
	}
	private void clearInEvents() {
		toggle = false;
		hUB.turnONSystems = false;
		hUB.turnOFFSystems = false;
		network.error = false;
		network.connect = false;
		system1.toggle = false;
		system1.error = false;
		system1.working = false;
		system2.toggle = false;
		system2.error = false;
		system2.working = false;
		timeEvents[0] = false;
		timeEvents[1] = false;
		timeEvents[2] = false;
		timeEvents[3] = false;
	}
	
	private void microStep() {
		long transitioned = -1l;
		stateConfVectorPosition = 0l;
		switch (stateVector[0]) {
		case SMARTLIGHTHUBSYSTEM_1_0_HUBOFF:
			transitioned = smartLightHubSystem_1_0_HubOff_react(transitioned);
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			transitioned = smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF_react(transitioned);
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON:
			transitioned = smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON_react(transitioned);
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF:
			transitioned = smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF_react(transitioned);
			break;
		default:
			break;
		}
		if (getStateConfVectorPosition()<1l) {
			switch (stateVector[1]) {
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON_react(transitioned);
				break;
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<2l) {
			switch (stateVector[2]) {
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator_react(transitioned);
				break;
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1_react(transitioned);
				break;
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2_react(transitioned);
				break;
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final__react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<3l) {
			switch (stateVector[3]) {
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_NO_CONNECTION:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection_react(transitioned);
				break;
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_CONNECTED:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<4l) {
			switch (stateVector[4]) {
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working_react(transitioned);
				break;
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR:
				transitioned = smartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<5l) {
			switch (stateVector[5]) {
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING:
				smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working_react(transitioned);
				break;
			case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR:
				smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error_react(transitioned);
				break;
			default:
				break;
			}
		}
	}
	
	private void runCycle() {
		/* Performs a 'run to completion' step. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		nextEvent();
		do { 
			microStep();
			clearInEvents();
		} while (nextEvent());
		isExecuting = false;
	}
	
	protected boolean nextEvent() {
		if(!inEventQueue.isEmpty()) {
			inEventQueue.poll().run();
			return true;
		}
		return false;
	}
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public boolean isStateActive(State state) {
	
		switch (state) {
		case SMARTLIGHTHUBSYSTEM_1_0_HUBOFF:
			return stateVector[0] == State.SMARTLIGHTHUBSYSTEM_1_0_HUBOFF;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB:
			return stateVector[0].ordinal() >= State.
					SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB.ordinal()&& stateVector[0].ordinal() <= State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR.ordinal();
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS:
			return stateVector[0].ordinal() >= State.
					SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS.ordinal()&& stateVector[0].ordinal() <= State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF.ordinal();
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			return stateVector[0] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER:
			return stateVector[0].ordinal() >= State.
					SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER.ordinal()&& stateVector[0].ordinal() <= State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF.ordinal();
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON:
			return stateVector[0] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF:
			return stateVector[0] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON:
			return stateVector[1] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF:
			return stateVector[1] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR:
			return stateVector[2] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER:
			return stateVector[2].ordinal() >= State.
					SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER.ordinal()&& stateVector[2].ordinal() <= State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_.ordinal();
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1:
			return stateVector[2] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2:
			return stateVector[2] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_:
			return stateVector[2] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_NO_CONNECTION:
			return stateVector[3] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_NO_CONNECTION;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_CONNECTED:
			return stateVector[3] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_CONNECTED;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1:
			return stateVector[4].ordinal() >= State.
					SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1.ordinal()&& stateVector[4].ordinal() <= State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR.ordinal();
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING:
			return stateVector[4] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR:
			return stateVector[4] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2:
			return stateVector[5].ordinal() >= State.
					SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2.ordinal()&& stateVector[5].ordinal() <= State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR.ordinal();
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING:
			return stateVector[5] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR:
			return stateVector[5] == State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR;
		default:
			return false;
		}
	}
	
	public void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public void raiseTimeEvent(int eventID) {
		inEventQueue.add(() -> {
			timeEvents[eventID] = true;
		});
		runCycle();
	}
	
	public HUB hUB() {
		return hUB;
	}
	
	public Power power() {
		return power;
	}
	
	public Network network() {
		return network;
	}
	
	public System1 system1() {
		return system1;
	}
	
	public System2 system2() {
		return system2;
	}
	
	
	private boolean toggle;
	
	
	public void raiseToggle() {
		inEventQueue.add(() -> {
			toggle = true;
		});
		runCycle();
	}
	
	private boolean hubON;
	
	
	protected void raiseHubON() {
		hubON = true;
		hubONObservable.next(null);
	}
	
	private Observable<Void> hubONObservable = new Observable<Void>();
	
	public Observable<Void> getHubON() {
		return hubONObservable;
	}
	
	private boolean hubOFF;
	
	
	protected void raiseHubOFF() {
		hubOFF = true;
		hubOFFObservable.next(null);
	}
	
	private Observable<Void> hubOFFObservable = new Observable<Void>();
	
	public Observable<Void> getHubOFF() {
		return hubOFFObservable;
	}
	
	private SmartLightSystem lED1;
	
	public SmartLightSystem getLED1() {
		return lED1;
	}
	
	public void setLED1(SmartLightSystem value) {
		this.lED1 = value;
	}
	
	private SmartLightSystem lED2;
	
	public SmartLightSystem getLED2() {
		return lED2;
	}
	
	public void setLED2(SmartLightSystem value) {
		this.lED2 = value;
	}
	
	private Network_Component wiFi;
	
	public Network_Component getWiFi() {
		return wiFi;
	}
	
	public void setWiFi(Network_Component value) {
		this.wiFi = value;
	}
	
	private boolean inUSE;
	
	public boolean getInUSE() {
		return inUSE;
	}
	
	public void setInUSE(boolean value) {
		this.inUSE = value;
	}
	
	private Hub_PowerManager powerManager;
	
	public Hub_PowerManager getPowerManager() {
		return powerManager;
	}
	
	public void setPowerManager(Hub_PowerManager value) {
		this.powerManager = value;
	}
	
	private long totalSystemsON;
	
	public long getTotalSystemsON() {
		return totalSystemsON;
	}
	
	public void setTotalSystemsON(long value) {
		this.totalSystemsON = value;
	}
	
	/* Entry action for state 'HubOff'. */
	private void entryAction_SmartLightHubSystem_1_0_HubOff() {
		/* Entry action for state 'HubOff'. */
		raiseHubOFF();
	}
	
	/* Entry action for state 'SmartLightsHUB'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB() {
		/* Entry action for state 'SmartLightsHUB'. */
		raiseHubON();
	}
	
	/* Entry action for state 'SmartLightHubSystemStatus'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus() {
		/* Entry action for state 'SmartLightHubSystemStatus'. */
		hUB.raiseAllSystemsOFF();
	}
	
	/* Entry action for state 'AllSystemsOFF'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF() {
		/* Entry action for state 'AllSystemsOFF'. */
		hUB.raiseAllSystemsOFF();
		setInUSE(false);
	}
	
	/* Entry action for state 'System_Manager'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager() {
		/* Entry action for state 'System_Manager'. */
		setInUSE(true);
	}
	
	/* Entry action for state 'LED_Light1_ON'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON() {
		/* Entry action for state 'LED_Light1_ON'. */
		system1.raiseIsON();
		getLED1().system().raiseOn();
	}
	
	/* Entry action for state 'LED_Light1_OFF'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF() {
		/* Entry action for state 'LED_Light1_OFF'. */
		system1.raiseIsOFF();
		getLED1().system().raiseOff();
	}
	
	/* Entry action for state 'LED_Light2_ON'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON() {
		/* Entry action for state 'LED_Light2_ON'. */
		system2.raiseIsON();
		getLED2().system().raiseOn();
	}
	
	/* Entry action for state 'LED_Light2_OFF'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF() {
		/* Entry action for state 'LED_Light2_OFF'. */
		system2.raiseIsOFF();
		getLED2().system().raiseOff();
	}
	
	/* Entry action for state 'PowerConsumptionCalculator'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator() {
		/* Entry action for state 'PowerConsumptionCalculator'. */
		timerService.setTimer(this, 0, 500l, false);
		powerManager.setThreshold(power.threshold);
		powerManager.setTotal(power.total);
		power.setThresholdReached(powerManager.getOver_threshold());
	}
	
	/* Entry action for state 'IOT_EnergySaverManager'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager() {
		/* Entry action for state 'IOT_EnergySaverManager'. */
		timerService.setTimer(this, 1, 500l, false);
		power.setIndex(powerManager.getSystem_index_to_turnoff());
		power.setThresholdReached(powerManager.getOver_threshold());
	}
	
	/* Entry action for state 'LED_Light1'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1() {
		/* Entry action for state 'LED_Light1'. */
		system1.raiseIsOFF();
	}
	
	/* Entry action for state 'LED_Light2'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2() {
		/* Entry action for state 'LED_Light2'. */
		system2.raiseIsOFF();
	}
	
	/* Entry action for state 'No Connection'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection() {
		/* Entry action for state 'No Connection'. */
		timerService.setTimer(this, 2, (1l * 1000l), true);
		network.setConnection(false);
	}
	
	/* Entry action for state 'Connected'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected() {
		/* Entry action for state 'Connected'. */
		timerService.setTimer(this, 3, (1l * 1000l), true);
		network.setConnection(true);
	}
	
	/* Entry action for state 'LED1'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1() {
		/* Entry action for state 'LED1'. */
		getLED1().enter();
	}
	
	/* Entry action for state 'LED2'. */
	private void entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2() {
		/* Entry action for state 'LED2'. */
		getLED2().enter();
	}
	
	/* Exit action for state 'PowerConsumptionCalculator'. */
	private void exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator() {
		/* Exit action for state 'PowerConsumptionCalculator'. */
		timerService.unsetTimer(this, 0);
	}
	
	/* Exit action for state 'IOT_EnergySaverManager'. */
	private void exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager() {
		/* Exit action for state 'IOT_EnergySaverManager'. */
		timerService.unsetTimer(this, 1);
	}
	
	/* Exit action for state 'No Connection'. */
	private void exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection() {
		/* Exit action for state 'No Connection'. */
		timerService.unsetTimer(this, 2);
	}
	
	/* Exit action for state 'Connected'. */
	private void exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected() {
		/* Exit action for state 'Connected'. */
		timerService.unsetTimer(this, 3);
	}
	
	/* 'default' enter sequence for state HubOff */
	private void enterSequence_SmartLightHubSystem_1_0_HubOff_default() {
		/* 'default' enter sequence for state HubOff */
		entryAction_SmartLightHubSystem_1_0_HubOff();
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_HUBOFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state SmartLightsHUB */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_default() {
		/* 'default' enter sequence for state SmartLightsHUB */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_default();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_default();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_default();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_default();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_default();
	}
	
	/* 'default' enter sequence for state SmartLightHubSystemStatus */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_default() {
		/* 'default' enter sequence for state SmartLightHubSystemStatus */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_default();
	}
	
	/* 'default' enter sequence for state AllSystemsOFF */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF_default() {
		/* 'default' enter sequence for state AllSystemsOFF */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF();
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state System_Manager */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_default() {
		/* 'default' enter sequence for state System_Manager */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_default();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_default();
	}
	
	/* 'default' enter sequence for state LED_Light1_ON */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON_default() {
		/* 'default' enter sequence for state LED_Light1_ON */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON();
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state LED_Light1_OFF */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF_default() {
		/* 'default' enter sequence for state LED_Light1_OFF */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF();
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state LED_Light2_ON */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON_default() {
		/* 'default' enter sequence for state LED_Light2_ON */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON();
		stateVector[1] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state LED_Light2_OFF */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF_default() {
		/* 'default' enter sequence for state LED_Light2_OFF */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF();
		stateVector[1] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state PowerConsumptionCalculator */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator_default() {
		/* 'default' enter sequence for state PowerConsumptionCalculator */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator();
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state IOT_EnergySaverManager */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_default() {
		/* 'default' enter sequence for state IOT_EnergySaverManager */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_default();
	}
	
	/* 'default' enter sequence for state LED_Light1 */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1_default() {
		/* 'default' enter sequence for state LED_Light1 */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1();
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state LED_Light2 */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2_default() {
		/* 'default' enter sequence for state LED_Light2 */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2();
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2;
		stateConfVectorPosition = 2;
	}
	
	/* Default enter sequence for final state */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final__default() {
		/* Default enter sequence for final state */
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state No Connection */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection_default() {
		/* 'default' enter sequence for state No Connection */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection();
		stateVector[3] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_NO_CONNECTION;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state Connected */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected_default() {
		/* 'default' enter sequence for state Connected */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected();
		stateVector[3] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_CONNECTED;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state LED1 */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_default() {
		/* 'default' enter sequence for state LED1 */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_default();
	}
	
	/* 'default' enter sequence for state working */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working_default() {
		/* 'default' enter sequence for state working */
		stateVector[4] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for state error */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error_default() {
		/* 'default' enter sequence for state error */
		stateVector[4] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for state LED2 */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_default() {
		/* 'default' enter sequence for state LED2 */
		entryAction_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_default();
	}
	
	/* 'default' enter sequence for state working */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working_default() {
		/* 'default' enter sequence for state working */
		stateVector[5] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING;
		stateConfVectorPosition = 5;
	}
	
	/* 'default' enter sequence for state error */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error_default() {
		/* 'default' enter sequence for state error */
		stateVector[5] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR;
		stateConfVectorPosition = 5;
	}
	
	/* 'default' enter sequence for region SmartLightHubSystem_1.0 */
	private void enterSequence_SmartLightHubSystem_1_0_default() {
		/* 'default' enter sequence for region SmartLightHubSystem_1.0 */
		react_SmartLightHubSystem_1_0__entry_Default();
	}
	
	/* 'default' enter sequence for region SmartHubStatusRegion */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_default() {
		/* 'default' enter sequence for region SmartHubStatusRegion */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion__entry_Default();
	}
	
	/* 'default' enter sequence for region HubStatusRegion */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_default() {
		/* 'default' enter sequence for region HubStatusRegion */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion__entry_Default();
	}
	
	/* 'default' enter sequence for region System1 */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_default() {
		/* 'default' enter sequence for region System1 */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1__entry_Default();
	}
	
	/* 'default' enter sequence for region System2 */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_default() {
		/* 'default' enter sequence for region System2 */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2__entry_Default();
	}
	
	/* 'default' enter sequence for region PowerConsumptionRegion */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_default() {
		/* 'default' enter sequence for region PowerConsumptionRegion */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion__entry_Default();
	}
	
	/* 'default' enter sequence for region turningoff_device_overthreshold */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_default() {
		/* 'default' enter sequence for region turningoff_device_overthreshold */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__entry_Default();
	}
	
	/* 'default' enter sequence for region NetworkRegion */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_default() {
		/* 'default' enter sequence for region NetworkRegion */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion__entry_Default();
	}
	
	/* 'default' enter sequence for region Light1Region */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_default() {
		/* 'default' enter sequence for region Light1Region */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region__entry_Default();
	}
	
	/* 'default' enter sequence for region status */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_default() {
		/* 'default' enter sequence for region status */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status__entry_Default();
	}
	
	/* 'default' enter sequence for region Light2Region */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_default() {
		/* 'default' enter sequence for region Light2Region */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region__entry_Default();
	}
	
	/* 'default' enter sequence for region status */
	private void enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_default() {
		/* 'default' enter sequence for region status */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status__entry_Default();
	}
	
	/* Default exit sequence for state HubOff */
	private void exitSequence_SmartLightHubSystem_1_0_HubOff() {
		/* Default exit sequence for state HubOff */
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state SmartLightsHUB */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB() {
		/* Default exit sequence for state SmartLightsHUB */
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion();
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion();
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion();
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region();
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region();
		stateVector[0] = State.$NULLSTATE$;
		stateVector[1] = State.$NULLSTATE$;
		stateVector[2] = State.$NULLSTATE$;
		stateVector[3] = State.$NULLSTATE$;
		stateVector[4] = State.$NULLSTATE$;
		stateVector[5] = State.$NULLSTATE$;
		stateConfVectorPosition = 5;
	}
	
	/* Default exit sequence for state AllSystemsOFF */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF() {
		/* Default exit sequence for state AllSystemsOFF */
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state System_Manager */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager() {
		/* Default exit sequence for state System_Manager */
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1();
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2();
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS;
		stateVector[1] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state LED_Light1_ON */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON() {
		/* Default exit sequence for state LED_Light1_ON */
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state LED_Light1_OFF */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF() {
		/* Default exit sequence for state LED_Light1_OFF */
		stateVector[0] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state LED_Light2_ON */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON() {
		/* Default exit sequence for state LED_Light2_ON */
		stateVector[1] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state LED_Light2_OFF */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF() {
		/* Default exit sequence for state LED_Light2_OFF */
		stateVector[1] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state PowerConsumptionCalculator */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator() {
		/* Default exit sequence for state PowerConsumptionCalculator */
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB;
		stateConfVectorPosition = 2;
		exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator();
	}
	
	/* Default exit sequence for state IOT_EnergySaverManager */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager() {
		/* Default exit sequence for state IOT_EnergySaverManager */
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold();
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB;
		stateConfVectorPosition = 2;
		exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
	}
	
	/* Default exit sequence for state LED_Light1 */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1() {
		/* Default exit sequence for state LED_Light1 */
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER;
		stateConfVectorPosition = 2;
	}
	
	/* Default exit sequence for state LED_Light2 */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2() {
		/* Default exit sequence for state LED_Light2 */
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER;
		stateConfVectorPosition = 2;
	}
	
	/* Default exit sequence for final state. */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final_() {
		/* Default exit sequence for final state. */
		stateVector[2] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER;
		stateConfVectorPosition = 2;
	}
	
	/* Default exit sequence for state No Connection */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection() {
		/* Default exit sequence for state No Connection */
		stateVector[3] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB;
		stateConfVectorPosition = 3;
		exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection();
	}
	
	/* Default exit sequence for state Connected */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected() {
		/* Default exit sequence for state Connected */
		stateVector[3] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB;
		stateConfVectorPosition = 3;
		exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected();
	}
	
	/* Default exit sequence for state LED1 */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1() {
		/* Default exit sequence for state LED1 */
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status();
		stateVector[4] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB;
		stateConfVectorPosition = 4;
	}
	
	/* Default exit sequence for state working */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working() {
		/* Default exit sequence for state working */
		stateVector[4] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1;
		stateConfVectorPosition = 4;
	}
	
	/* Default exit sequence for state error */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error() {
		/* Default exit sequence for state error */
		stateVector[4] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1;
		stateConfVectorPosition = 4;
	}
	
	/* Default exit sequence for state LED2 */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2() {
		/* Default exit sequence for state LED2 */
		exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status();
		stateVector[5] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB;
		stateConfVectorPosition = 5;
	}
	
	/* Default exit sequence for state working */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working() {
		/* Default exit sequence for state working */
		stateVector[5] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2;
		stateConfVectorPosition = 5;
	}
	
	/* Default exit sequence for state error */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error() {
		/* Default exit sequence for state error */
		stateVector[5] = State.SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2;
		stateConfVectorPosition = 5;
	}
	
	/* Default exit sequence for region SmartLightHubSystem_1.0 */
	private void exitSequence_SmartLightHubSystem_1_0() {
		/* Default exit sequence for region SmartLightHubSystem_1.0 */
		switch (stateVector[0]) {
		case SMARTLIGHTHUBSYSTEM_1_0_HUBOFF:
			exitSequence_SmartLightHubSystem_1_0_HubOff();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF();
			break;
		default:
			break;
		}
		switch (stateVector[1]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF();
			break;
		default:
			break;
		}
		switch (stateVector[2]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1();
			exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2();
			exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final_();
			exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		default:
			break;
		}
		switch (stateVector[3]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_NO_CONNECTION:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_CONNECTED:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected();
			break;
		default:
			break;
		}
		switch (stateVector[4]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error();
			break;
		default:
			break;
		}
		switch (stateVector[5]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region SmartHubStatusRegion */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion() {
		/* Default exit sequence for region SmartHubStatusRegion */
		switch (stateVector[0]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF();
			break;
		default:
			break;
		}
		switch (stateVector[1]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region System1 */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1() {
		/* Default exit sequence for region System1 */
		switch (stateVector[0]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_ON:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM1_LED_LIGHT1_OFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region System2 */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2() {
		/* Default exit sequence for region System2 */
		switch (stateVector[1]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_ON:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_SMARTHUBSTATUSREGION_SMARTLIGHTHUBSYSTEMSTATUS_HUBSTATUSREGION_SYSTEM_MANAGER_SYSTEM2_LED_LIGHT2_OFF:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region PowerConsumptionRegion */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion() {
		/* Default exit sequence for region PowerConsumptionRegion */
		switch (stateVector[2]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_POWERCONSUMPTIONCALCULATOR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1();
			exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2();
			exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final_();
			exitAction_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region turningoff_device_overthreshold */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold() {
		/* Default exit sequence for region turningoff_device_overthreshold */
		switch (stateVector[2]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT1:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD_LED_LIGHT2:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_POWERCONSUMPTIONREGION_IOT_ENERGYSAVERMANAGER_TURNINGOFF_DEVICE_OVERTHRESHOLD__FINAL_:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region NetworkRegion */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion() {
		/* Default exit sequence for region NetworkRegion */
		switch (stateVector[3]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_NO_CONNECTION:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_NETWORKREGION_CONNECTED:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region Light1Region */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region() {
		/* Default exit sequence for region Light1Region */
		switch (stateVector[4]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region status */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status() {
		/* Default exit sequence for region status */
		switch (stateVector[4]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_WORKING:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT1REGION_LED1_STATUS_ERROR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region Light2Region */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region() {
		/* Default exit sequence for region Light2Region */
		switch (stateVector[5]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region status */
	private void exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status() {
		/* Default exit sequence for region status */
		switch (stateVector[5]) {
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_WORKING:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working();
			break;
		case SMARTLIGHTHUBSYSTEM_1_0_SMARTLIGHTSHUB_LIGHT2REGION_LED2_STATUS_ERROR:
			exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error();
			break;
		default:
			break;
		}
	}
	
	/* The reactions of state null. */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__choice_0() {
		/* The reactions of state null. */
		if (power.getIndex()==1l) {
			enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1_default();
		} else {
			if (power.getIndex()==2l) {
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2_default();
			} else {
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final__default();
			}
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_HubOff_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__entry_Default() {
		/* Default react sequence for initial entry  */
		react_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__choice_0();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion__entry_Default() {
		/* Default react sequence for initial entry  */
		getWiFi().enter();
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working_default();
	}
	
	private long smartLightHubSystem_1_0_HubOff_react(long transitioned_before) {
		/* The reactions of state HubOff. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (toggle) {
				exitSequence_SmartLightHubSystem_1_0_HubOff();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_default();
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_react(long transitioned_before) {
		/* The reactions of state SmartLightsHUB. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (toggle) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB();
				enterSequence_SmartLightHubSystem_1_0_HubOff_default();
				transitioned_after = 5l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF_react(long transitioned_before) {
		/* The reactions of state AllSystemsOFF. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (hUB.turnONSystems) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_default();
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_react(long transitioned_before) {
		/* The reactions of state System_Manager. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (hUB.turnOFFSystems) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_AllSystemsOFF_default();
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON_react(long transitioned_before) {
		/* The reactions of state LED_Light1_ON. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (system1.toggle) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF_default();
				transitioned_after = 0l;
			}
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF_react(long transitioned_before) {
		/* The reactions of state LED_Light1_OFF. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if ((system1.toggle || hUB.turnONSystems)) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_OFF();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System1_LED_Light1_ON_default();
				transitioned_after = 0l;
			}
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON_react(long transitioned_before) {
		/* The reactions of state LED_Light2_ON. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<1l) {
			if (system2.toggle) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF_default();
				smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_react(0l);
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF_react(long transitioned_before) {
		/* The reactions of state LED_Light2_OFF. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<1l) {
			if ((system2.toggle || hUB.turnONSystems)) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_OFF();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_System2_LED_Light2_ON_default();
				smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_react(0l);
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = smartLightHubSystem_1_0_SmartLightsHUB_SmartHubStatusRegion_SmartLightHubSystemStatus_HubStatusRegion_System_Manager_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator_react(long transitioned_before) {
		/* The reactions of state PowerConsumptionCalculator. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<2l) {
			if (power.getThresholdReached()) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_default();
				transitioned_after = 2l;
			} else {
				if (timeEvents[0]) {
					exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator();
					timeEvents[0] = false;
					enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator_default();
					transitioned_after = 2l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_react(long transitioned_before) {
		/* The reactions of state IOT_EnergySaverManager. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<2l) {
			if (!(power.getThresholdReached())) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_PowerConsumptionCalculator_default();
				transitioned_after = 2l;
			} else {
				if (((timeEvents[1]) && (power.getThresholdReached()))) {
					exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager();
					timeEvents[1] = false;
					enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_default();
					transitioned_after = 2l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light1_react(long transitioned_before) {
		/* The reactions of state LED_Light1. */
		long transitioned_after = transitioned_before;
		/* Always execute local reactions. */
		transitioned_after = smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_react(transitioned_before);
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold_LED_Light2_react(long transitioned_before) {
		/* The reactions of state LED_Light2. */
		long transitioned_after = transitioned_before;
		/* Always execute local reactions. */
		transitioned_after = smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_react(transitioned_before);
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_turningoff_device_overthreshold__final__react(long transitioned_before) {
		/* The reactions of state null. */
		return smartLightHubSystem_1_0_SmartLightsHUB_PowerConsumptionRegion_IOT_EnergySaverManager_react(transitioned_before);
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection_react(long transitioned_before) {
		/* The reactions of state No Connection. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<3l) {
			if (((timeEvents[2]) && (getWiFi().getConnection()))) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection();
				timeEvents[2] = false;
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected_default();
				transitioned_after = 3l;
			}
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected_react(long transitioned_before) {
		/* The reactions of state Connected. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<3l) {
			if (((timeEvents[3]) && (!(getWiFi().getConnection())))) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_Connected();
				timeEvents[3] = false;
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_NetworkRegion_No_Connection_default();
				transitioned_after = 3l;
			}
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working_react(long transitioned_before) {
		/* The reactions of state working. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<4l) {
			if (system1.error) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error_default();
				transitioned_after = 4l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error_react(long transitioned_before) {
		/* The reactions of state error. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<4l) {
			if (system1.working) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_error();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light1Region_LED1_status_working_default();
				transitioned_after = 4l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_react(long transitioned_before) {
		/* The reactions of state LED2. */
		long transitioned_after = transitioned_before;
		/* Always execute local reactions. */
		transitioned_after = smartLightHubSystem_1_0_SmartLightsHUB_react(transitioned_before);
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working_react(long transitioned_before) {
		/* The reactions of state working. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<5l) {
			if (system2.error) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error_default();
				smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_react(5l);
				transitioned_after = 5l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error_react(long transitioned_before) {
		/* The reactions of state error. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<5l) {
			if (system2.working) {
				exitSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_error();
				enterSequence_SmartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_status_working_default();
				smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_react(5l);
				transitioned_after = 5l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = smartLightHubSystem_1_0_SmartLightsHUB_Light2Region_LED2_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	/* Can be used by the client code to trigger a run to completion step without raising an event. */
	public void triggerWithoutEvent() {
		runCycle();
	}
}
