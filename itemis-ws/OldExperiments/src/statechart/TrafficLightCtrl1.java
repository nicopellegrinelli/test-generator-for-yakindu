/* Generated by itemis CREATE code generator. */
package statechart;

import com.yakindu.core.ICycleBased;
import com.yakindu.core.IStatemachine;
import com.yakindu.core.ITimed;
import com.yakindu.core.ITimerService;

public class TrafficLightCtrl1 implements ITimed, ICycleBased {
	public static class TrafficLight {
		private boolean red;
		
		public boolean getRed() {
			return red;
		}
		
		public void setRed(boolean value) {
			this.red = value;
		}
		
		private boolean yellow;
		
		public boolean getYellow() {
			return yellow;
		}
		
		public void setYellow(boolean value) {
			this.yellow = value;
		}
		
		private boolean green;
		
		public boolean getGreen() {
			return green;
		}
		
		public void setGreen(boolean value) {
			this.green = value;
		}
		
	}
	
	public static class Pedestrian {
		private boolean request;
		
		public boolean getRequest() {
			return request;
		}
		
		public void setRequest(boolean value) {
			this.request = value;
		}
		
		private boolean red;
		
		public boolean getRed() {
			return red;
		}
		
		public void setRed(boolean value) {
			this.red = value;
		}
		
		private boolean green;
		
		public boolean getGreen() {
			return green;
		}
		
		public void setGreen(boolean value) {
			this.green = value;
		}
		
	}
	
	private static class EvBuf {
		private boolean pedestrianRequest;
		private boolean onOff;
	}
	private static class TimeEventsEvBuf {
		private boolean trafficLightCtrl1_main_region_on_r1_PedWaiting_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOn_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOff_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_StreetAttention_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_StreetRed_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_PedestrianGreen_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_PedestrianRed_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_StreetPrepare_time_event_0;
		private boolean trafficLightCtrl1_main_region_on_r1_Safe_time_event_0;
		private boolean trafficLightCtrl1_main_region_off_r1_YellowOn_time_event_0;
		private boolean trafficLightCtrl1_main_region_off_r1_YellowOff_time_event_0;
		private boolean trafficLightCtrl1_time_event_0;
	}
	private static class TrafficLightCtrl1EvBuf {
		private EvBuf iface = new EvBuf();
		private TimeEventsEvBuf timeEvents = new TimeEventsEvBuf();
	}
	protected TrafficLight trafficLight;
	
	protected Pedestrian pedestrian;
	
	public enum State {
		MAIN_REGION_ON,
		MAIN_REGION_ON_R1_STREETGREEN,
		MAIN_REGION_ON_R1_PEDWAITING,
		MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON,
		MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF,
		MAIN_REGION_ON_R1_STREETATTENTION,
		MAIN_REGION_ON_R1_STREETRED,
		MAIN_REGION_ON_R1_PEDESTRIANGREEN,
		MAIN_REGION_ON_R1_PEDESTRIANRED,
		MAIN_REGION_ON_R1_STREETPREPARE,
		MAIN_REGION_ON_R1_SAFE,
		MAIN_REGION_OFF,
		MAIN_REGION_OFF_R1_YELLOWON,
		MAIN_REGION_OFF_R1_YELLOWOFF,
		$NULLSTATE$
	};
	
	private final State[] stateVector = new State[1];
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[12];
	
	private TrafficLightCtrl1EvBuf current = new TrafficLightCtrl1EvBuf();
	
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		return isExecuting;
	}
	
	protected void setIsExecuting(boolean value) {
		this.isExecuting = value;
	}
	public TrafficLightCtrl1() {
		trafficLight = new TrafficLight();
		pedestrian = new Pedestrian();
		for (int i = 0; i < 1; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		
		/* Default init sequence for statechart TrafficLightCtrl1 */
		trafficLight.setRed(false);
		trafficLight.setYellow(false);
		trafficLight.setGreen(false);
		pedestrian.setRequest(false);
		pedestrian.setRed(false);
		pedestrian.setGreen(false);
		
		isExecuting = false;
	}
	
	public void runCycle() {
		/* Performs a 'run to completion' step. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		if (this.operationCallback == null) {
			throw new IllegalStateException("Operation callback must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		swapInEvents();
		microStep();
		isExecuting = false;
	}
	
	public void enter() {
		/* Activates the state machine. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		if (this.operationCallback == null) {
			throw new IllegalStateException("Operation callback must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default enter sequence for statechart TrafficLightCtrl1 */
		/* Entry action for statechart 'TrafficLightCtrl1'. */
		timerService.setTimer(this, 11, 200l, true);
		enterSequence_main_region_default();
		isExecuting = false;
	}
	
	public void exit() {
		/* Deactivates the state machine. */
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default exit sequence for statechart TrafficLightCtrl1 */
		exitSequence_main_region();
		stateVector[0] = State.$NULLSTATE$;
		/* Exit action for state 'TrafficLightCtrl1'. */
		timerService.unsetTimer(this, 11);
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public boolean isFinal() {
		return false;
	}
	private void swapInEvents() {
		current.iface.pedestrianRequest = pedestrianRequest;
		pedestrianRequest = false;
		current.iface.onOff = onOff;
		onOff = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_time_event_0 = timeEvents[0];
		timeEvents[0] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOn_time_event_0 = timeEvents[1];
		timeEvents[1] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOff_time_event_0 = timeEvents[2];
		timeEvents[2] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetAttention_time_event_0 = timeEvents[3];
		timeEvents[3] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetRed_time_event_0 = timeEvents[4];
		timeEvents[4] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedestrianGreen_time_event_0 = timeEvents[5];
		timeEvents[5] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedestrianRed_time_event_0 = timeEvents[6];
		timeEvents[6] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetPrepare_time_event_0 = timeEvents[7];
		timeEvents[7] = false;
		current.timeEvents.trafficLightCtrl1_main_region_on_r1_Safe_time_event_0 = timeEvents[8];
		timeEvents[8] = false;
		current.timeEvents.trafficLightCtrl1_main_region_off_r1_YellowOn_time_event_0 = timeEvents[9];
		timeEvents[9] = false;
		current.timeEvents.trafficLightCtrl1_main_region_off_r1_YellowOff_time_event_0 = timeEvents[10];
		timeEvents[10] = false;
		current.timeEvents.trafficLightCtrl1_time_event_0 = timeEvents[11];
		timeEvents[11] = false;
	}
	
	private void clearInEvents() {
		pedestrianRequest = false;
		onOff = false;
		timeEvents[0] = false;
		timeEvents[1] = false;
		timeEvents[2] = false;
		timeEvents[3] = false;
		timeEvents[4] = false;
		timeEvents[5] = false;
		timeEvents[6] = false;
		timeEvents[7] = false;
		timeEvents[8] = false;
		timeEvents[9] = false;
		timeEvents[10] = false;
		timeEvents[11] = false;
	}
	
	private void microStep() {
		switch (stateVector[0]) {
		case MAIN_REGION_ON_R1_STREETGREEN:
			main_region_on_r1_StreetGreen_react(-1l);
			break;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON:
			main_region_on_r1_PedWaiting_r1_waitOn_react(-1l);
			break;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF:
			main_region_on_r1_PedWaiting_r1_waitOff_react(-1l);
			break;
		case MAIN_REGION_ON_R1_STREETATTENTION:
			main_region_on_r1_StreetAttention_react(-1l);
			break;
		case MAIN_REGION_ON_R1_STREETRED:
			main_region_on_r1_StreetRed_react(-1l);
			break;
		case MAIN_REGION_ON_R1_PEDESTRIANGREEN:
			main_region_on_r1_PedestrianGreen_react(-1l);
			break;
		case MAIN_REGION_ON_R1_PEDESTRIANRED:
			main_region_on_r1_PedestrianRed_react(-1l);
			break;
		case MAIN_REGION_ON_R1_STREETPREPARE:
			main_region_on_r1_StreetPrepare_react(-1l);
			break;
		case MAIN_REGION_ON_R1_SAFE:
			main_region_on_r1_Safe_react(-1l);
			break;
		case MAIN_REGION_OFF_R1_YELLOWON:
			main_region_off_r1_YellowOn_react(-1l);
			break;
		case MAIN_REGION_OFF_R1_YELLOWOFF:
			main_region_off_r1_YellowOff_react(-1l);
			break;
		default:
			break;
		}
	}
	
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public boolean isStateActive(State state) {
	
		switch (state) {
		case MAIN_REGION_ON:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_ON.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_ON_R1_SAFE.ordinal();
		case MAIN_REGION_ON_R1_STREETGREEN:
			return stateVector[0] == State.MAIN_REGION_ON_R1_STREETGREEN;
		case MAIN_REGION_ON_R1_PEDWAITING:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_ON_R1_PEDWAITING.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF.ordinal();
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON:
			return stateVector[0] == State.MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF:
			return stateVector[0] == State.MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF;
		case MAIN_REGION_ON_R1_STREETATTENTION:
			return stateVector[0] == State.MAIN_REGION_ON_R1_STREETATTENTION;
		case MAIN_REGION_ON_R1_STREETRED:
			return stateVector[0] == State.MAIN_REGION_ON_R1_STREETRED;
		case MAIN_REGION_ON_R1_PEDESTRIANGREEN:
			return stateVector[0] == State.MAIN_REGION_ON_R1_PEDESTRIANGREEN;
		case MAIN_REGION_ON_R1_PEDESTRIANRED:
			return stateVector[0] == State.MAIN_REGION_ON_R1_PEDESTRIANRED;
		case MAIN_REGION_ON_R1_STREETPREPARE:
			return stateVector[0] == State.MAIN_REGION_ON_R1_STREETPREPARE;
		case MAIN_REGION_ON_R1_SAFE:
			return stateVector[0] == State.MAIN_REGION_ON_R1_SAFE;
		case MAIN_REGION_OFF:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_OFF.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_OFF_R1_YELLOWOFF.ordinal();
		case MAIN_REGION_OFF_R1_YELLOWON:
			return stateVector[0] == State.MAIN_REGION_OFF_R1_YELLOWON;
		case MAIN_REGION_OFF_R1_YELLOWOFF:
			return stateVector[0] == State.MAIN_REGION_OFF_R1_YELLOWOFF;
		default:
			return false;
		}
	}
	
	public void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public void raiseTimeEvent(int eventID) {
		timeEvents[eventID] = true;
	}
	
	public TrafficLight trafficLight() {
		return trafficLight;
	}
	
	public Pedestrian pedestrian() {
		return pedestrian;
	}
	
	
	public interface OperationCallback {
	
		public void synchronize();
		
	}
	
	private OperationCallback operationCallback;
	
	public void setOperationCallback(OperationCallback operationCallback) {
		this.operationCallback = operationCallback;
	}
	
	private boolean pedestrianRequest;
	
	
	public void raisePedestrianRequest() {
		pedestrianRequest = true;
	}
	
	private boolean onOff;
	
	
	public void raiseOnOff() {
		onOff = true;
	}
	
	/* Entry action for state 'StreetGreen'. */
	private void entryAction_main_region_on_r1_StreetGreen() {
		/* Entry action for state 'StreetGreen'. */
		trafficLight.setRed(false);
		trafficLight.setYellow(false);
		trafficLight.setGreen(true);
		pedestrian.setRed(true);
		pedestrian.setGreen(false);
		pedestrian.setRequest(false);
	}
	
	/* Entry action for state 'PedWaiting'. */
	private void entryAction_main_region_on_r1_PedWaiting() {
		/* Entry action for state 'PedWaiting'. */
		timerService.setTimer(this, 0, (7l * 1000l), false);
	}
	
	/* Entry action for state 'waitOn'. */
	private void entryAction_main_region_on_r1_PedWaiting_r1_waitOn() {
		/* Entry action for state 'waitOn'. */
		timerService.setTimer(this, 1, 500l, false);
		pedestrian.setRequest(true);
	}
	
	/* Entry action for state 'waitOff'. */
	private void entryAction_main_region_on_r1_PedWaiting_r1_waitOff() {
		/* Entry action for state 'waitOff'. */
		timerService.setTimer(this, 2, 500l, false);
		pedestrian.setRequest(false);
	}
	
	/* Entry action for state 'StreetAttention'. */
	private void entryAction_main_region_on_r1_StreetAttention() {
		/* Entry action for state 'StreetAttention'. */
		timerService.setTimer(this, 3, (2l * 1000l), false);
		trafficLight.setRed(false);
		trafficLight.setYellow(true);
		trafficLight.setGreen(false);
	}
	
	/* Entry action for state 'StreetRed'. */
	private void entryAction_main_region_on_r1_StreetRed() {
		/* Entry action for state 'StreetRed'. */
		timerService.setTimer(this, 4, (2l * 1000l), false);
		trafficLight.setRed(true);
		trafficLight.setYellow(false);
		trafficLight.setGreen(false);
	}
	
	/* Entry action for state 'PedestrianGreen'. */
	private void entryAction_main_region_on_r1_PedestrianGreen() {
		/* Entry action for state 'PedestrianGreen'. */
		timerService.setTimer(this, 5, (7l * 1000l), false);
		pedestrian.setRed(false);
		pedestrian.setGreen(true);
	}
	
	/* Entry action for state 'PedestrianRed'. */
	private void entryAction_main_region_on_r1_PedestrianRed() {
		/* Entry action for state 'PedestrianRed'. */
		timerService.setTimer(this, 6, (5l * 1000l), false);
		pedestrian.setRed(true);
		pedestrian.setGreen(false);
	}
	
	/* Entry action for state 'StreetPrepare'. */
	private void entryAction_main_region_on_r1_StreetPrepare() {
		/* Entry action for state 'StreetPrepare'. */
		timerService.setTimer(this, 7, (2l * 1000l), false);
		trafficLight.setRed(true);
		trafficLight.setYellow(true);
		trafficLight.setGreen(false);
	}
	
	/* Entry action for state 'Safe'. */
	private void entryAction_main_region_on_r1_Safe() {
		/* Entry action for state 'Safe'. */
		timerService.setTimer(this, 8, (10l * 1000l), false);
		trafficLight.setRed(true);
		trafficLight.setYellow(false);
		trafficLight.setGreen(false);
		pedestrian.setRed(true);
		pedestrian.setGreen(false);
		pedestrian.setRequest(false);
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_off() {
		/* Entry action for state 'off'. */
		trafficLight.setRed(false);
		trafficLight.setGreen(false);
		trafficLight.setYellow(false);
		pedestrian.setRed(false);
		pedestrian.setGreen(false);
	}
	
	/* Entry action for state 'YellowOn'. */
	private void entryAction_main_region_off_r1_YellowOn() {
		/* Entry action for state 'YellowOn'. */
		timerService.setTimer(this, 9, 500l, false);
		trafficLight.setYellow(true);
		pedestrian.setRequest(true);
	}
	
	/* Entry action for state 'YellowOff'. */
	private void entryAction_main_region_off_r1_YellowOff() {
		/* Entry action for state 'YellowOff'. */
		timerService.setTimer(this, 10, 500l, false);
		trafficLight.setYellow(false);
		pedestrian.setRequest(false);
	}
	
	/* Exit action for state 'PedWaiting'. */
	private void exitAction_main_region_on_r1_PedWaiting() {
		/* Exit action for state 'PedWaiting'. */
		timerService.unsetTimer(this, 0);
		pedestrian.setRequest(false);
	}
	
	/* Exit action for state 'waitOn'. */
	private void exitAction_main_region_on_r1_PedWaiting_r1_waitOn() {
		/* Exit action for state 'waitOn'. */
		timerService.unsetTimer(this, 1);
	}
	
	/* Exit action for state 'waitOff'. */
	private void exitAction_main_region_on_r1_PedWaiting_r1_waitOff() {
		/* Exit action for state 'waitOff'. */
		timerService.unsetTimer(this, 2);
	}
	
	/* Exit action for state 'StreetAttention'. */
	private void exitAction_main_region_on_r1_StreetAttention() {
		/* Exit action for state 'StreetAttention'. */
		timerService.unsetTimer(this, 3);
	}
	
	/* Exit action for state 'StreetRed'. */
	private void exitAction_main_region_on_r1_StreetRed() {
		/* Exit action for state 'StreetRed'. */
		timerService.unsetTimer(this, 4);
	}
	
	/* Exit action for state 'PedestrianGreen'. */
	private void exitAction_main_region_on_r1_PedestrianGreen() {
		/* Exit action for state 'PedestrianGreen'. */
		timerService.unsetTimer(this, 5);
	}
	
	/* Exit action for state 'PedestrianRed'. */
	private void exitAction_main_region_on_r1_PedestrianRed() {
		/* Exit action for state 'PedestrianRed'. */
		timerService.unsetTimer(this, 6);
	}
	
	/* Exit action for state 'StreetPrepare'. */
	private void exitAction_main_region_on_r1_StreetPrepare() {
		/* Exit action for state 'StreetPrepare'. */
		timerService.unsetTimer(this, 7);
	}
	
	/* Exit action for state 'Safe'. */
	private void exitAction_main_region_on_r1_Safe() {
		/* Exit action for state 'Safe'. */
		timerService.unsetTimer(this, 8);
	}
	
	/* Exit action for state 'YellowOn'. */
	private void exitAction_main_region_off_r1_YellowOn() {
		/* Exit action for state 'YellowOn'. */
		timerService.unsetTimer(this, 9);
	}
	
	/* Exit action for state 'YellowOff'. */
	private void exitAction_main_region_off_r1_YellowOff() {
		/* Exit action for state 'YellowOff'. */
		timerService.unsetTimer(this, 10);
	}
	
	/* 'default' enter sequence for state on */
	private void enterSequence_main_region_on_default() {
		/* 'default' enter sequence for state on */
		enterSequence_main_region_on_r1_default();
	}
	
	/* 'default' enter sequence for state StreetGreen */
	private void enterSequence_main_region_on_r1_StreetGreen_default() {
		/* 'default' enter sequence for state StreetGreen */
		entryAction_main_region_on_r1_StreetGreen();
		stateVector[0] = State.MAIN_REGION_ON_R1_STREETGREEN;
	}
	
	/* 'default' enter sequence for state PedWaiting */
	private void enterSequence_main_region_on_r1_PedWaiting_default() {
		/* 'default' enter sequence for state PedWaiting */
		entryAction_main_region_on_r1_PedWaiting();
		enterSequence_main_region_on_r1_PedWaiting_r1_default();
	}
	
	/* 'default' enter sequence for state waitOn */
	private void enterSequence_main_region_on_r1_PedWaiting_r1_waitOn_default() {
		/* 'default' enter sequence for state waitOn */
		entryAction_main_region_on_r1_PedWaiting_r1_waitOn();
		stateVector[0] = State.MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON;
	}
	
	/* 'default' enter sequence for state waitOff */
	private void enterSequence_main_region_on_r1_PedWaiting_r1_waitOff_default() {
		/* 'default' enter sequence for state waitOff */
		entryAction_main_region_on_r1_PedWaiting_r1_waitOff();
		stateVector[0] = State.MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF;
	}
	
	/* 'default' enter sequence for state StreetAttention */
	private void enterSequence_main_region_on_r1_StreetAttention_default() {
		/* 'default' enter sequence for state StreetAttention */
		entryAction_main_region_on_r1_StreetAttention();
		stateVector[0] = State.MAIN_REGION_ON_R1_STREETATTENTION;
	}
	
	/* 'default' enter sequence for state StreetRed */
	private void enterSequence_main_region_on_r1_StreetRed_default() {
		/* 'default' enter sequence for state StreetRed */
		entryAction_main_region_on_r1_StreetRed();
		stateVector[0] = State.MAIN_REGION_ON_R1_STREETRED;
	}
	
	/* 'default' enter sequence for state PedestrianGreen */
	private void enterSequence_main_region_on_r1_PedestrianGreen_default() {
		/* 'default' enter sequence for state PedestrianGreen */
		entryAction_main_region_on_r1_PedestrianGreen();
		stateVector[0] = State.MAIN_REGION_ON_R1_PEDESTRIANGREEN;
	}
	
	/* 'default' enter sequence for state PedestrianRed */
	private void enterSequence_main_region_on_r1_PedestrianRed_default() {
		/* 'default' enter sequence for state PedestrianRed */
		entryAction_main_region_on_r1_PedestrianRed();
		stateVector[0] = State.MAIN_REGION_ON_R1_PEDESTRIANRED;
	}
	
	/* 'default' enter sequence for state StreetPrepare */
	private void enterSequence_main_region_on_r1_StreetPrepare_default() {
		/* 'default' enter sequence for state StreetPrepare */
		entryAction_main_region_on_r1_StreetPrepare();
		stateVector[0] = State.MAIN_REGION_ON_R1_STREETPREPARE;
	}
	
	/* 'default' enter sequence for state Safe */
	private void enterSequence_main_region_on_r1_Safe_default() {
		/* 'default' enter sequence for state Safe */
		entryAction_main_region_on_r1_Safe();
		stateVector[0] = State.MAIN_REGION_ON_R1_SAFE;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_off();
		enterSequence_main_region_off_r1_default();
	}
	
	/* 'default' enter sequence for state YellowOn */
	private void enterSequence_main_region_off_r1_YellowOn_default() {
		/* 'default' enter sequence for state YellowOn */
		entryAction_main_region_off_r1_YellowOn();
		stateVector[0] = State.MAIN_REGION_OFF_R1_YELLOWON;
	}
	
	/* 'default' enter sequence for state YellowOff */
	private void enterSequence_main_region_off_r1_YellowOff_default() {
		/* 'default' enter sequence for state YellowOff */
		entryAction_main_region_off_r1_YellowOff();
		stateVector[0] = State.MAIN_REGION_OFF_R1_YELLOWOFF;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		/* 'default' enter sequence for region main region */
		react_main_region__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_on_r1_default() {
		/* 'default' enter sequence for region r1 */
		react_main_region_on_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_on_r1_PedWaiting_r1_default() {
		/* 'default' enter sequence for region r1 */
		react_main_region_on_r1_PedWaiting_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_off_r1_default() {
		/* 'default' enter sequence for region r1 */
		react_main_region_off_r1__entry_Default();
	}
	
	/* Default exit sequence for state on */
	private void exitSequence_main_region_on() {
		/* Default exit sequence for state on */
		exitSequence_main_region_on_r1();
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state StreetGreen */
	private void exitSequence_main_region_on_r1_StreetGreen() {
		/* Default exit sequence for state StreetGreen */
		stateVector[0] = State.MAIN_REGION_ON;
	}
	
	/* Default exit sequence for state PedWaiting */
	private void exitSequence_main_region_on_r1_PedWaiting() {
		/* Default exit sequence for state PedWaiting */
		exitSequence_main_region_on_r1_PedWaiting_r1();
		stateVector[0] = State.MAIN_REGION_ON;
		exitAction_main_region_on_r1_PedWaiting();
	}
	
	/* Default exit sequence for state waitOn */
	private void exitSequence_main_region_on_r1_PedWaiting_r1_waitOn() {
		/* Default exit sequence for state waitOn */
		stateVector[0] = State.MAIN_REGION_ON_R1_PEDWAITING;
		exitAction_main_region_on_r1_PedWaiting_r1_waitOn();
	}
	
	/* Default exit sequence for state waitOff */
	private void exitSequence_main_region_on_r1_PedWaiting_r1_waitOff() {
		/* Default exit sequence for state waitOff */
		stateVector[0] = State.MAIN_REGION_ON_R1_PEDWAITING;
		exitAction_main_region_on_r1_PedWaiting_r1_waitOff();
	}
	
	/* Default exit sequence for state StreetAttention */
	private void exitSequence_main_region_on_r1_StreetAttention() {
		/* Default exit sequence for state StreetAttention */
		stateVector[0] = State.MAIN_REGION_ON;
		exitAction_main_region_on_r1_StreetAttention();
	}
	
	/* Default exit sequence for state StreetRed */
	private void exitSequence_main_region_on_r1_StreetRed() {
		/* Default exit sequence for state StreetRed */
		stateVector[0] = State.MAIN_REGION_ON;
		exitAction_main_region_on_r1_StreetRed();
	}
	
	/* Default exit sequence for state PedestrianGreen */
	private void exitSequence_main_region_on_r1_PedestrianGreen() {
		/* Default exit sequence for state PedestrianGreen */
		stateVector[0] = State.MAIN_REGION_ON;
		exitAction_main_region_on_r1_PedestrianGreen();
	}
	
	/* Default exit sequence for state PedestrianRed */
	private void exitSequence_main_region_on_r1_PedestrianRed() {
		/* Default exit sequence for state PedestrianRed */
		stateVector[0] = State.MAIN_REGION_ON;
		exitAction_main_region_on_r1_PedestrianRed();
	}
	
	/* Default exit sequence for state StreetPrepare */
	private void exitSequence_main_region_on_r1_StreetPrepare() {
		/* Default exit sequence for state StreetPrepare */
		stateVector[0] = State.MAIN_REGION_ON;
		exitAction_main_region_on_r1_StreetPrepare();
	}
	
	/* Default exit sequence for state Safe */
	private void exitSequence_main_region_on_r1_Safe() {
		/* Default exit sequence for state Safe */
		stateVector[0] = State.MAIN_REGION_ON;
		exitAction_main_region_on_r1_Safe();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_off() {
		/* Default exit sequence for state off */
		exitSequence_main_region_off_r1();
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state YellowOn */
	private void exitSequence_main_region_off_r1_YellowOn() {
		/* Default exit sequence for state YellowOn */
		stateVector[0] = State.MAIN_REGION_OFF;
		exitAction_main_region_off_r1_YellowOn();
	}
	
	/* Default exit sequence for state YellowOff */
	private void exitSequence_main_region_off_r1_YellowOff() {
		/* Default exit sequence for state YellowOff */
		stateVector[0] = State.MAIN_REGION_OFF;
		exitAction_main_region_off_r1_YellowOff();
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		/* Default exit sequence for region main region */
		switch (stateVector[0]) {
		case MAIN_REGION_ON:
			exitSequence_main_region_on();
			break;
		case MAIN_REGION_ON_R1_STREETGREEN:
			exitSequence_main_region_on_r1_StreetGreen();
			break;
		case MAIN_REGION_ON_R1_PEDWAITING:
			exitSequence_main_region_on_r1_PedWaiting();
			break;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON:
			exitSequence_main_region_on_r1_PedWaiting_r1_waitOn();
			exitAction_main_region_on_r1_PedWaiting();
			break;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF:
			exitSequence_main_region_on_r1_PedWaiting_r1_waitOff();
			exitAction_main_region_on_r1_PedWaiting();
			break;
		case MAIN_REGION_ON_R1_STREETATTENTION:
			exitSequence_main_region_on_r1_StreetAttention();
			break;
		case MAIN_REGION_ON_R1_STREETRED:
			exitSequence_main_region_on_r1_StreetRed();
			break;
		case MAIN_REGION_ON_R1_PEDESTRIANGREEN:
			exitSequence_main_region_on_r1_PedestrianGreen();
			break;
		case MAIN_REGION_ON_R1_PEDESTRIANRED:
			exitSequence_main_region_on_r1_PedestrianRed();
			break;
		case MAIN_REGION_ON_R1_STREETPREPARE:
			exitSequence_main_region_on_r1_StreetPrepare();
			break;
		case MAIN_REGION_ON_R1_SAFE:
			exitSequence_main_region_on_r1_Safe();
			break;
		case MAIN_REGION_OFF:
			exitSequence_main_region_off();
			break;
		case MAIN_REGION_OFF_R1_YELLOWON:
			exitSequence_main_region_off_r1_YellowOn();
			break;
		case MAIN_REGION_OFF_R1_YELLOWOFF:
			exitSequence_main_region_off_r1_YellowOff();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_on_r1() {
		/* Default exit sequence for region r1 */
		switch (stateVector[0]) {
		case MAIN_REGION_ON_R1_STREETGREEN:
			exitSequence_main_region_on_r1_StreetGreen();
			break;
		case MAIN_REGION_ON_R1_PEDWAITING:
			exitSequence_main_region_on_r1_PedWaiting();
			break;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON:
			exitSequence_main_region_on_r1_PedWaiting_r1_waitOn();
			exitAction_main_region_on_r1_PedWaiting();
			break;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF:
			exitSequence_main_region_on_r1_PedWaiting_r1_waitOff();
			exitAction_main_region_on_r1_PedWaiting();
			break;
		case MAIN_REGION_ON_R1_STREETATTENTION:
			exitSequence_main_region_on_r1_StreetAttention();
			break;
		case MAIN_REGION_ON_R1_STREETRED:
			exitSequence_main_region_on_r1_StreetRed();
			break;
		case MAIN_REGION_ON_R1_PEDESTRIANGREEN:
			exitSequence_main_region_on_r1_PedestrianGreen();
			break;
		case MAIN_REGION_ON_R1_PEDESTRIANRED:
			exitSequence_main_region_on_r1_PedestrianRed();
			break;
		case MAIN_REGION_ON_R1_STREETPREPARE:
			exitSequence_main_region_on_r1_StreetPrepare();
			break;
		case MAIN_REGION_ON_R1_SAFE:
			exitSequence_main_region_on_r1_Safe();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_on_r1_PedWaiting_r1() {
		/* Default exit sequence for region r1 */
		switch (stateVector[0]) {
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITON:
			exitSequence_main_region_on_r1_PedWaiting_r1_waitOn();
			break;
		case MAIN_REGION_ON_R1_PEDWAITING_R1_WAITOFF:
			exitSequence_main_region_on_r1_PedWaiting_r1_waitOff();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_off_r1() {
		/* Default exit sequence for region r1 */
		switch (stateVector[0]) {
		case MAIN_REGION_OFF_R1_YELLOWON:
			exitSequence_main_region_off_r1_YellowOn();
			break;
		case MAIN_REGION_OFF_R1_YELLOWOFF:
			exitSequence_main_region_off_r1_YellowOff();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_on_r1_PedWaiting_r1__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_on_r1_PedWaiting_r1_waitOn_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_on_r1__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_on_r1_Safe_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_off_r1__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_off_r1_YellowOn_default();
	}
	
	private long react(long transitioned_before) {
		/* State machine reactions. */
		if (current.timeEvents.trafficLightCtrl1_time_event_0) {
			operationCallback.synchronize();
		}
		return transitioned_before;
	}
	
	private long main_region_on_react(long transitioned_before) {
		/* The reactions of state on. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.iface.onOff) {
				exitSequence_main_region_on();
				enterSequence_main_region_off_default();
				react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_StreetGreen_react(long transitioned_before) {
		/* The reactions of state StreetGreen. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.iface.pedestrianRequest) {
				exitSequence_main_region_on_r1_StreetGreen();
				enterSequence_main_region_on_r1_PedWaiting_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_PedWaiting_react(long transitioned_before) {
		/* The reactions of state PedWaiting. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_time_event_0) {
				exitSequence_main_region_on_r1_PedWaiting();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_time_event_0 = false;
				enterSequence_main_region_on_r1_StreetAttention_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_PedWaiting_r1_waitOn_react(long transitioned_before) {
		/* The reactions of state waitOn. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOn_time_event_0) {
				exitSequence_main_region_on_r1_PedWaiting_r1_waitOn();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOn_time_event_0 = false;
				enterSequence_main_region_on_r1_PedWaiting_r1_waitOff_default();
				main_region_on_r1_PedWaiting_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_r1_PedWaiting_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_PedWaiting_r1_waitOff_react(long transitioned_before) {
		/* The reactions of state waitOff. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOff_time_event_0) {
				exitSequence_main_region_on_r1_PedWaiting_r1_waitOff();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedWaiting_r1_waitOff_time_event_0 = false;
				enterSequence_main_region_on_r1_PedWaiting_r1_waitOn_default();
				main_region_on_r1_PedWaiting_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_r1_PedWaiting_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_StreetAttention_react(long transitioned_before) {
		/* The reactions of state StreetAttention. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetAttention_time_event_0) {
				exitSequence_main_region_on_r1_StreetAttention();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetAttention_time_event_0 = false;
				enterSequence_main_region_on_r1_StreetRed_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_StreetRed_react(long transitioned_before) {
		/* The reactions of state StreetRed. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetRed_time_event_0) {
				exitSequence_main_region_on_r1_StreetRed();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetRed_time_event_0 = false;
				enterSequence_main_region_on_r1_PedestrianGreen_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_PedestrianGreen_react(long transitioned_before) {
		/* The reactions of state PedestrianGreen. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedestrianGreen_time_event_0) {
				exitSequence_main_region_on_r1_PedestrianGreen();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedestrianGreen_time_event_0 = false;
				enterSequence_main_region_on_r1_PedestrianRed_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_PedestrianRed_react(long transitioned_before) {
		/* The reactions of state PedestrianRed. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedestrianRed_time_event_0) {
				exitSequence_main_region_on_r1_PedestrianRed();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_PedestrianRed_time_event_0 = false;
				enterSequence_main_region_on_r1_StreetPrepare_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_StreetPrepare_react(long transitioned_before) {
		/* The reactions of state StreetPrepare. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetPrepare_time_event_0) {
				exitSequence_main_region_on_r1_StreetPrepare();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_StreetPrepare_time_event_0 = false;
				enterSequence_main_region_on_r1_StreetGreen_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_on_r1_Safe_react(long transitioned_before) {
		/* The reactions of state Safe. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_on_r1_Safe_time_event_0) {
				exitSequence_main_region_on_r1_Safe();
				current.timeEvents.trafficLightCtrl1_main_region_on_r1_Safe_time_event_0 = false;
				enterSequence_main_region_on_r1_StreetPrepare_default();
				main_region_on_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_on_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.iface.onOff) {
				exitSequence_main_region_off();
				enterSequence_main_region_on_default();
				react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_off_r1_YellowOn_react(long transitioned_before) {
		/* The reactions of state YellowOn. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_off_r1_YellowOn_time_event_0) {
				exitSequence_main_region_off_r1_YellowOn();
				current.timeEvents.trafficLightCtrl1_main_region_off_r1_YellowOn_time_event_0 = false;
				enterSequence_main_region_off_r1_YellowOff_default();
				main_region_off_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_off_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_off_r1_YellowOff_react(long transitioned_before) {
		/* The reactions of state YellowOff. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (current.timeEvents.trafficLightCtrl1_main_region_off_r1_YellowOff_time_event_0) {
				exitSequence_main_region_off_r1_YellowOff();
				current.timeEvents.trafficLightCtrl1_main_region_off_r1_YellowOff_time_event_0 = false;
				enterSequence_main_region_off_r1_YellowOn_default();
				main_region_off_react(0l);
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_off_react(transitioned_before);
		}
		return transitioned_after;
	}
	
}
