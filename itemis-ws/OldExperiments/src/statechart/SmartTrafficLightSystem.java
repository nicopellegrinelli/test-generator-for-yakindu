/* Generated by itemis CREATE code generator. */
package statechart;

import com.yakindu.core.IEventDriven;
import com.yakindu.core.IStatemachine;
import com.yakindu.core.ITimed;
import com.yakindu.core.ITimerService;
import java.util.LinkedList;
import java.util.Queue;
import statechart.Actuator_Component;
import statechart.Controller_Component;
import statechart.DeviceTemp_Component;
import statechart.Network_Component;
import statechart.Power_Component;
import statechart.Sensor_Component;
import statechart.TrafficLight_Unit;

public class SmartTrafficLightSystem implements ITimed, IEventDriven {
	public static class System {
		private SmartTrafficLightSystem parent;
		
		public System(SmartTrafficLightSystem parent) {
			this.parent = parent;
		}
		private boolean on;
		
		
		public void raiseOn() {
			parent.inEventQueue.add(() -> {
				on = true;
			});
			parent.runCycle();
		}
		
		private boolean off;
		
		
		public void raiseOff() {
			parent.inEventQueue.add(() -> {
				off = true;
			});
			parent.runCycle();
		}
		
		private boolean isOn;
		
		public boolean getIsOn() {
			return isOn;
		}
		
		public void setIsOn(boolean value) {
			this.isOn = value;
		}
		
		private String light_status;
		
		public String getLight_status() {
			return light_status;
		}
		
		public void setLight_status(String value) {
			this.light_status = value;
		}
		
		private String crossing_status;
		
		public String getCrossing_status() {
			return crossing_status;
		}
		
		public void setCrossing_status(String value) {
			this.crossing_status = value;
		}
		
		private long timer;
		
		public long getTimer() {
			return timer;
		}
		
		public void setTimer(long value) {
			this.timer = value;
		}
		
	}
	
	public static class SensorInput {
		private long detection_time;
		
		public long getDetection_time() {
			return detection_time;
		}
		
		public void setDetection_time(long value) {
			this.detection_time = value;
		}
		
		private long timeout_time;
		
		public long getTimeout_time() {
			return timeout_time;
		}
		
		public void setTimeout_time(long value) {
			this.timeout_time = value;
		}
		
	}
	
	public static class SensorOutput {
		private long counter;
		
		public long getCounter() {
			return counter;
		}
		
		public void setCounter(long value) {
			this.counter = value;
		}
		
		private boolean activity;
		
		public boolean getActivity() {
			return activity;
		}
		
		public void setActivity(boolean value) {
			this.activity = value;
		}
		
	}
	
	protected System system;
	
	protected SensorInput sensorInput;
	
	protected SensorOutput sensorOutput;
	
	public enum State {
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_OFF,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_ON,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__ACTUATOR_UPDATES_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__DEVICE_FUNCTIONING_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT_OFF,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT_OFF,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT_OFF,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY_OFF,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT_OFF,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_,
		MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE_OFF,
		$NULLSTATE$
	};
	
	private final State[] stateVector = new State[7];
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[8];
	
	private Queue<Runnable> inEventQueue = new LinkedList<Runnable>();
	private Actuator_Component actuator;
	
	protected Actuator_Component getActuator() {
		return actuator;
	}
	
	protected void setActuator(Actuator_Component value) {
		this.actuator = value;
	}
	
	
	private Controller_Component controller;
	
	protected Controller_Component getController() {
		return controller;
	}
	
	protected void setController(Controller_Component value) {
		this.controller = value;
	}
	
	
	private Sensor_Component sensor;
	
	protected Sensor_Component getSensor() {
		return sensor;
	}
	
	protected void setSensor(Sensor_Component value) {
		this.sensor = value;
	}
	
	
	private Network_Component wiFi;
	
	protected Network_Component getWiFi() {
		return wiFi;
	}
	
	protected void setWiFi(Network_Component value) {
		this.wiFi = value;
	}
	
	
	private Power_Component power;
	
	protected Power_Component getPower() {
		return power;
	}
	
	protected void setPower(Power_Component value) {
		this.power = value;
	}
	
	
	private DeviceTemp_Component temp;
	
	protected DeviceTemp_Component getTemp() {
		return temp;
	}
	
	protected void setTemp(DeviceTemp_Component value) {
		this.temp = value;
	}
	
	
	private TrafficLight_Unit trafficLight;
	
	protected TrafficLight_Unit getTrafficLight() {
		return trafficLight;
	}
	
	protected void setTrafficLight(TrafficLight_Unit value) {
		this.trafficLight = value;
	}
	
	
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		return isExecuting;
	}
	
	protected void setIsExecuting(boolean value) {
		this.isExecuting = value;
	}
	private long stateConfVectorPosition;
	
	protected long getStateConfVectorPosition() {
		return stateConfVectorPosition;
	}
	
	protected void setStateConfVectorPosition(long value) {
		this.stateConfVectorPosition = value;
	}
	public SmartTrafficLightSystem() {
		system = new System(this);
		sensorInput = new SensorInput();
		sensorOutput = new SensorOutput();
		for (int i = 0; i < 7; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		
		/* Default init sequence for statechart SmartTrafficLightSystem */
		setActuator(null);
		setController(null);
		setSensor(null);
		setWiFi(null);
		setPower(null);
		setTemp(null);
		setTrafficLight(null);
		setMessage("");
		setWiFi_connection(false);
		setTemp_value(50l);
		setPower_input(10l);
		setPower_total(0l);
		setPower_required(10l);
		system.setIsOn(false);
		system.setLight_status("");
		system.setCrossing_status("");
		system.setTimer(0l);
		sensorInput.setDetection_time(5l);
		sensorInput.setTimeout_time(8l);
		sensorOutput.setCounter(0l);
		sensorOutput.setActivity(false);
		
		isExecuting = false;
	}
	
	public void enter() {
		/* Activates the state machine. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default enter sequence for statechart SmartTrafficLightSystem */
		enterSequence_main_region_default();
		isExecuting = false;
	}
	
	public void exit() {
		/* Deactivates the state machine. */
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default exit sequence for statechart SmartTrafficLightSystem */
		exitSequence_main_region();
		stateVector[0] = State.$NULLSTATE$;
		stateVector[1] = State.$NULLSTATE$;
		stateVector[2] = State.$NULLSTATE$;
		stateVector[3] = State.$NULLSTATE$;
		stateVector[4] = State.$NULLSTATE$;
		stateVector[5] = State.$NULLSTATE$;
		stateVector[6] = State.$NULLSTATE$;
		stateConfVectorPosition = 6;
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$||stateVector[1] != State.$NULLSTATE$||stateVector[2] != State.$NULLSTATE$||stateVector[3] != State.$NULLSTATE$||stateVector[4] != State.$NULLSTATE$||stateVector[5] != State.$NULLSTATE$||stateVector[6] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public boolean isFinal() {
		return false;
	}
	private void clearInEvents() {
		system.on = false;
		system.off = false;
		timeEvents[0] = false;
		timeEvents[1] = false;
		timeEvents[2] = false;
		timeEvents[3] = false;
		timeEvents[4] = false;
		timeEvents[5] = false;
		timeEvents[6] = false;
		timeEvents[7] = false;
	}
	
	private void microStep() {
		long transitioned = -1l;
		stateConfVectorPosition = 0l;
		switch (stateVector[0]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_OFF:
			transitioned = main_region_SmartTrafficLightSystem_SystemStatus_off_react(transitioned);
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_ON:
			transitioned = main_region_SmartTrafficLightSystem_SystemStatus_on_react(transitioned);
			break;
		default:
			break;
		}
		if (getStateConfVectorPosition()<1l) {
			switch (stateVector[1]) {
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__ACTUATOR_UPDATES_:
				transitioned = main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates__react(transitioned);
				break;
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__DEVICE_FUNCTIONING_:
				transitioned = main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning__react(transitioned);
				break;
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT_OFF:
				transitioned = main_region_SmartTrafficLightSystem_ActuatorComponent_off_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<2l) {
			switch (stateVector[2]) {
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_:
				transitioned = main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates__react(transitioned);
				break;
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT_OFF:
				transitioned = main_region_SmartTrafficLightSystem_ControllerComponent_off_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<3l) {
			switch (stateVector[3]) {
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_:
				transitioned = main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates__react(transitioned);
				break;
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT_OFF:
				transitioned = main_region_SmartTrafficLightSystem_SensorComponent_off_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<4l) {
			switch (stateVector[4]) {
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_:
				transitioned = main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates__react(transitioned);
				break;
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY_OFF:
				transitioned = main_region_SmartTrafficLightSystem_WiFiGateway_off_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<5l) {
			switch (stateVector[5]) {
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_:
				transitioned = main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates__react(transitioned);
				break;
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT_OFF:
				transitioned = main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<6l) {
			switch (stateVector[6]) {
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_:
				main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates__react(transitioned);
				break;
			case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE_OFF:
				main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off_react(transitioned);
				break;
			default:
				break;
			}
		}
	}
	
	private void runCycle() {
		/* Performs a 'run to completion' step. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		nextEvent();
		do { 
			microStep();
			clearInEvents();
		} while (nextEvent());
		isExecuting = false;
	}
	
	protected boolean nextEvent() {
		if(!inEventQueue.isEmpty()) {
			inEventQueue.poll().run();
			return true;
		}
		return false;
	}
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public boolean isStateActive(State state) {
	
		switch (state) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE_OFF.ordinal();
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_OFF:
			return stateVector[0] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_OFF;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_ON:
			return stateVector[0] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_ON;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__ACTUATOR_UPDATES_:
			return stateVector[1] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__ACTUATOR_UPDATES_;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__DEVICE_FUNCTIONING_:
			return stateVector[1] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__DEVICE_FUNCTIONING_;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT_OFF:
			return stateVector[1] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT_OFF;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT_:
			return stateVector[2].ordinal() >= State.
					MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT_.ordinal()&& stateVector[2].ordinal() <= State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_.ordinal();
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_:
			return stateVector[2] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT_OFF:
			return stateVector[2] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT_OFF;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT_:
			return stateVector[3].ordinal() >= State.
					MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT_.ordinal()&& stateVector[3].ordinal() <= State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_.ordinal();
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_:
			return stateVector[3] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT_OFF:
			return stateVector[3] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT_OFF;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT_:
			return stateVector[4].ordinal() >= State.
					MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT_.ordinal()&& stateVector[4].ordinal() <= State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_.ordinal();
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_:
			return stateVector[4] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY_OFF:
			return stateVector[4] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY_OFF;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT_:
			return stateVector[5].ordinal() >= State.
					MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT_.ordinal()&& stateVector[5].ordinal() <= State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_.ordinal();
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_:
			return stateVector[5] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT_OFF:
			return stateVector[5] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT_OFF;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT_:
			return stateVector[6].ordinal() >= State.
					MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT_.ordinal()&& stateVector[6].ordinal() <= State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_.ordinal();
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_:
			return stateVector[6] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE_OFF:
			return stateVector[6] == State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE_OFF;
		default:
			return false;
		}
	}
	
	public void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public void raiseTimeEvent(int eventID) {
		inEventQueue.add(() -> {
			timeEvents[eventID] = true;
		});
		runCycle();
	}
	
	public System system() {
		return system;
	}
	
	public SensorInput sensorInput() {
		return sensorInput;
	}
	
	public SensorOutput sensorOutput() {
		return sensorOutput;
	}
	
	
	private String message;
	
	public String getMessage() {
		return message;
	}
	
	public void setMessage(String value) {
		this.message = value;
	}
	
	private boolean wiFi_connection;
	
	public boolean getWiFi_connection() {
		return wiFi_connection;
	}
	
	public void setWiFi_connection(boolean value) {
		this.wiFi_connection = value;
	}
	
	private long temp_value;
	
	public long getTemp_value() {
		return temp_value;
	}
	
	public void setTemp_value(long value) {
		this.temp_value = value;
	}
	
	private long power_input;
	
	public long getPower_input() {
		return power_input;
	}
	
	public void setPower_input(long value) {
		this.power_input = value;
	}
	
	private long power_total;
	
	public long getPower_total() {
		return power_total;
	}
	
	public void setPower_total(long value) {
		this.power_total = value;
	}
	
	private long power_required;
	
	public long getPower_required() {
		return power_required;
	}
	
	public void setPower_required(long value) {
		this.power_required = value;
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_SmartTrafficLightSystem_SystemStatus_off() {
		/* Entry action for state 'off'. */
		system.setIsOn(false);
		getPower().raiseOff();
		getSensor().raiseOff();
		getTrafficLight().raiseOff();
	}
	
	/* Entry action for state 'on'. */
	private void entryAction_main_region_SmartTrafficLightSystem_SystemStatus_on() {
		/* Entry action for state 'on'. */
		timerService.setTimer(this, 0, 500l, false);
		system.setIsOn(true);
		getPower().raiseOn();
		getSensor().raiseOn();
		getTrafficLight().raiseOn();
		system.setLight_status(trafficLight.light().getColor());
		system.setCrossing_status(trafficLight.light().getPedestrian());
		system.setTimer(trafficLight.timer().getCounter());
	}
	
	/* Entry action for state '<Actuator_Updates>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_() {
		/* Entry action for state '<Actuator_Updates>'. */
		timerService.setTimer(this, 1, 500l, false);
		actuator.power().setDeviceInput(power_input);
	}
	
	/* Entry action for state '<Device_Functioning>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_() {
		/* Entry action for state '<Device_Functioning>'. */
		timerService.setTimer(this, 2, (1l * 1000l), true);
		if (getActuator().device().getActuated()) {
			setMessage("Smart devices main function is here");
		}
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_SmartTrafficLightSystem_ActuatorComponent_off() {
		/* Entry action for state 'off'. */
		getActuator().raiseOff();
		actuator.power().setRequired(power_required);
	}
	
	/* Entry action for state '<Controller_Updates>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_() {
		/* Entry action for state '<Controller_Updates>'. */
		timerService.setTimer(this, 3, 500l, false);
		controller.sensors().setTriggered(sensorOutput.activity);
		controller.setActivity(sensorOutput.activity);
		actuator.setIsTriggered(controller.actuator().getTriggered());
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_SmartTrafficLightSystem_ControllerComponent_off() {
		/* Entry action for state 'off'. */
		getController().raiseOff();
	}
	
	/* Entry action for state '<Sensor_Updates>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_() {
		/* Entry action for state '<Sensor_Updates>'. */
		timerService.setTimer(this, 4, 500l, false);
		sensor.setSimulate_detection_timer(sensorInput.detection_time);
		sensorOutput.setActivity(sensor.getActivity());
		sensorOutput.setCounter(sensor.getCounter());
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_SmartTrafficLightSystem_SensorComponent_off() {
		/* Entry action for state 'off'. */
		getSensor().raiseOff();
	}
	
	/* Entry action for state '<Initialize_WiFi_Component>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component_() {
		/* Entry action for state '<Initialize_WiFi_Component>'. */
		getWiFi().enter();
	}
	
	/* Entry action for state '<WiFi_Updates>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_() {
		/* Entry action for state '<WiFi_Updates>'. */
		timerService.setTimer(this, 5, 500l, false);
		setWiFi_connection(wiFi.getConnection());
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_SmartTrafficLightSystem_WiFiGateway_off() {
		/* Entry action for state 'off'. */
		getWiFi().raiseOff();
	}
	
	/* Entry action for state '<Initialize_Power_Component>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component_() {
		/* Entry action for state '<Initialize_Power_Component>'. */
		power.setKilowatt(power_input);
	}
	
	/* Entry action for state '<Power_Updates>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_() {
		/* Entry action for state '<Power_Updates>'. */
		timerService.setTimer(this, 6, 500l, false);
		power.device().setIsOn(system.isOn);
		power.setKilowatt(power_input);
		setPower_total(power.getKWh());
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off() {
		/* Entry action for state 'off'. */
		getPower().raiseOff();
	}
	
	/* Entry action for state '<Temperature_Updates>'. */
	private void entryAction_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_() {
		/* Entry action for state '<Temperature_Updates>'. */
		timerService.setTimer(this, 7, 500l, false);
		setTemp_value(temp.heat().getLevel());
	}
	
	/* Entry action for state 'off'. */
	private void entryAction_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off() {
		/* Entry action for state 'off'. */
		temp.device().setIsOn(system.isOn);
	}
	
	/* Exit action for state 'on'. */
	private void exitAction_main_region_SmartTrafficLightSystem_SystemStatus_on() {
		/* Exit action for state 'on'. */
		timerService.unsetTimer(this, 0);
	}
	
	/* Exit action for state '<Actuator_Updates>'. */
	private void exitAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_() {
		/* Exit action for state '<Actuator_Updates>'. */
		timerService.unsetTimer(this, 1);
	}
	
	/* Exit action for state '<Device_Functioning>'. */
	private void exitAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_() {
		/* Exit action for state '<Device_Functioning>'. */
		timerService.unsetTimer(this, 2);
	}
	
	/* Exit action for state 'off'. */
	private void exitAction_main_region_SmartTrafficLightSystem_ActuatorComponent_off() {
		/* Exit action for state 'off'. */
		getActuator().raiseOn();
	}
	
	/* Exit action for state '<Controller_Updates>'. */
	private void exitAction_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_() {
		/* Exit action for state '<Controller_Updates>'. */
		timerService.unsetTimer(this, 3);
	}
	
	/* Exit action for state 'off'. */
	private void exitAction_main_region_SmartTrafficLightSystem_ControllerComponent_off() {
		/* Exit action for state 'off'. */
		getController().raiseOn();
	}
	
	/* Exit action for state '<Sensor_Updates>'. */
	private void exitAction_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_() {
		/* Exit action for state '<Sensor_Updates>'. */
		timerService.unsetTimer(this, 4);
	}
	
	/* Exit action for state 'off'. */
	private void exitAction_main_region_SmartTrafficLightSystem_SensorComponent_off() {
		/* Exit action for state 'off'. */
		getSensor().raiseOn();
	}
	
	/* Exit action for state '<WiFi_Updates>'. */
	private void exitAction_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_() {
		/* Exit action for state '<WiFi_Updates>'. */
		timerService.unsetTimer(this, 5);
	}
	
	/* Exit action for state 'off'. */
	private void exitAction_main_region_SmartTrafficLightSystem_WiFiGateway_off() {
		/* Exit action for state 'off'. */
		getWiFi().raiseOn();
	}
	
	/* Exit action for state '<Power_Updates>'. */
	private void exitAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_() {
		/* Exit action for state '<Power_Updates>'. */
		timerService.unsetTimer(this, 6);
	}
	
	/* Exit action for state 'off'. */
	private void exitAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off() {
		/* Exit action for state 'off'. */
		getPower().raiseOn();
	}
	
	/* Exit action for state '<Temperature_Updates>'. */
	private void exitAction_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_() {
		/* Exit action for state '<Temperature_Updates>'. */
		timerService.unsetTimer(this, 7);
	}
	
	/* 'default' enter sequence for state SmartTrafficLightSystem */
	private void enterSequence_main_region_SmartTrafficLightSystem_default() {
		/* 'default' enter sequence for state SmartTrafficLightSystem */
		enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_default();
		enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_default();
		enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent_default();
		enterSequence_main_region_SmartTrafficLightSystem_SensorComponent_default();
		enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway_default();
		enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_default();
		enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_default();
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_SmartTrafficLightSystem_SystemStatus_off();
		stateVector[0] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_OFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state on */
	private void enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_on_default() {
		/* 'default' enter sequence for state on */
		entryAction_main_region_SmartTrafficLightSystem_SystemStatus_on();
		stateVector[0] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_ON;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state <Actuator_Updates> */
	private void enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates__default() {
		/* 'default' enter sequence for state <Actuator_Updates> */
		entryAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_();
		stateVector[1] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__ACTUATOR_UPDATES_;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state <Device_Functioning> */
	private void enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning__default() {
		/* 'default' enter sequence for state <Device_Functioning> */
		entryAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_();
		stateVector[1] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__DEVICE_FUNCTIONING_;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_SmartTrafficLightSystem_ActuatorComponent_off();
		stateVector[1] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT_OFF;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state <Initialize_Controller_Component> */
	private void enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__default() {
		/* 'default' enter sequence for state <Initialize_Controller_Component> */
		enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating_default();
	}
	
	/* 'default' enter sequence for state <Controller_Updates> */
	private void enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates__default() {
		/* 'default' enter sequence for state <Controller_Updates> */
		entryAction_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_();
		stateVector[2] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_SmartTrafficLightSystem_ControllerComponent_off();
		stateVector[2] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT_OFF;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state <Initialize_Sensor_Component> */
	private void enterSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__default() {
		/* 'default' enter sequence for state <Initialize_Sensor_Component> */
		enterSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating_default();
	}
	
	/* 'default' enter sequence for state <Sensor_Updates> */
	private void enterSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates__default() {
		/* 'default' enter sequence for state <Sensor_Updates> */
		entryAction_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_();
		stateVector[3] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_SmartTrafficLightSystem_SensorComponent_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_SmartTrafficLightSystem_SensorComponent_off();
		stateVector[3] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT_OFF;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state <Initialize_WiFi_Component> */
	private void enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__default() {
		/* 'default' enter sequence for state <Initialize_WiFi_Component> */
		entryAction_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component_();
		enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating_default();
	}
	
	/* 'default' enter sequence for state <WiFi_Updates> */
	private void enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates__default() {
		/* 'default' enter sequence for state <WiFi_Updates> */
		entryAction_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_();
		stateVector[4] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_SmartTrafficLightSystem_WiFiGateway_off();
		stateVector[4] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY_OFF;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for state <Initialize_Power_Component> */
	private void enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__default() {
		/* 'default' enter sequence for state <Initialize_Power_Component> */
		entryAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component_();
		enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating_default();
	}
	
	/* 'default' enter sequence for state <Power_Updates> */
	private void enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates__default() {
		/* 'default' enter sequence for state <Power_Updates> */
		entryAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_();
		stateVector[5] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_;
		stateConfVectorPosition = 5;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off();
		stateVector[5] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT_OFF;
		stateConfVectorPosition = 5;
	}
	
	/* 'default' enter sequence for state <Initialize_DeviceTemp_Component> */
	private void enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__default() {
		/* 'default' enter sequence for state <Initialize_DeviceTemp_Component> */
		enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating_default();
	}
	
	/* 'default' enter sequence for state <Temperature_Updates> */
	private void enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates__default() {
		/* 'default' enter sequence for state <Temperature_Updates> */
		entryAction_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_();
		stateVector[6] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_;
		stateConfVectorPosition = 6;
	}
	
	/* 'default' enter sequence for state off */
	private void enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off_default() {
		/* 'default' enter sequence for state off */
		entryAction_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off();
		stateVector[6] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE_OFF;
		stateConfVectorPosition = 6;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		/* 'default' enter sequence for region main region */
		react_main_region__entry_Default();
	}
	
	/* 'default' enter sequence for region SystemStatus */
	private void enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_default() {
		/* 'default' enter sequence for region SystemStatus */
		react_main_region_SmartTrafficLightSystem_SystemStatus__entry_Default();
	}
	
	/* 'default' enter sequence for region ActuatorComponent */
	private void enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_default() {
		/* 'default' enter sequence for region ActuatorComponent */
		react_main_region_SmartTrafficLightSystem_ActuatorComponent__entry_Default();
	}
	
	/* 'default' enter sequence for region ControllerComponent */
	private void enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent_default() {
		/* 'default' enter sequence for region ControllerComponent */
		react_main_region_SmartTrafficLightSystem_ControllerComponent__entry_Default();
	}
	
	/* 'default' enter sequence for region updating */
	private void enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating_default() {
		/* 'default' enter sequence for region updating */
		react_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__entry_Default();
	}
	
	/* 'default' enter sequence for region SensorComponent */
	private void enterSequence_main_region_SmartTrafficLightSystem_SensorComponent_default() {
		/* 'default' enter sequence for region SensorComponent */
		react_main_region_SmartTrafficLightSystem_SensorComponent__entry_Default();
	}
	
	/* 'default' enter sequence for region updating */
	private void enterSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating_default() {
		/* 'default' enter sequence for region updating */
		react_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__entry_Default();
	}
	
	/* 'default' enter sequence for region WiFiGateway */
	private void enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway_default() {
		/* 'default' enter sequence for region WiFiGateway */
		react_main_region_SmartTrafficLightSystem_WiFiGateway__entry_Default();
	}
	
	/* 'default' enter sequence for region updating */
	private void enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating_default() {
		/* 'default' enter sequence for region updating */
		react_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__entry_Default();
	}
	
	/* 'default' enter sequence for region PowerCalculatorComponent */
	private void enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_default() {
		/* 'default' enter sequence for region PowerCalculatorComponent */
		react_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__entry_Default();
	}
	
	/* 'default' enter sequence for region updating */
	private void enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating_default() {
		/* 'default' enter sequence for region updating */
		react_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__entry_Default();
	}
	
	/* 'default' enter sequence for region trackingDeviceTemperature */
	private void enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_default() {
		/* 'default' enter sequence for region trackingDeviceTemperature */
		react_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__entry_Default();
	}
	
	/* 'default' enter sequence for region updating */
	private void enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating_default() {
		/* 'default' enter sequence for region updating */
		react_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__entry_Default();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_SmartTrafficLightSystem_SystemStatus_off() {
		/* Default exit sequence for state off */
		stateVector[0] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state on */
	private void exitSequence_main_region_SmartTrafficLightSystem_SystemStatus_on() {
		/* Default exit sequence for state on */
		stateVector[0] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 0;
		exitAction_main_region_SmartTrafficLightSystem_SystemStatus_on();
	}
	
	/* Default exit sequence for state <Actuator_Updates> */
	private void exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_() {
		/* Default exit sequence for state <Actuator_Updates> */
		stateVector[1] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 1;
		exitAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_();
	}
	
	/* Default exit sequence for state <Device_Functioning> */
	private void exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_() {
		/* Default exit sequence for state <Device_Functioning> */
		stateVector[1] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 1;
		exitAction_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_off() {
		/* Default exit sequence for state off */
		stateVector[1] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 1;
		exitAction_main_region_SmartTrafficLightSystem_ActuatorComponent_off();
	}
	
	/* Default exit sequence for state <Initialize_Controller_Component> */
	private void exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component_() {
		/* Default exit sequence for state <Initialize_Controller_Component> */
		exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating();
		stateVector[2] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 2;
	}
	
	/* Default exit sequence for state <Controller_Updates> */
	private void exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_() {
		/* Default exit sequence for state <Controller_Updates> */
		stateVector[2] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT_;
		stateConfVectorPosition = 2;
		exitAction_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent_off() {
		/* Default exit sequence for state off */
		stateVector[2] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 2;
		exitAction_main_region_SmartTrafficLightSystem_ControllerComponent_off();
	}
	
	/* Default exit sequence for state <Initialize_Sensor_Component> */
	private void exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component_() {
		/* Default exit sequence for state <Initialize_Sensor_Component> */
		exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating();
		stateVector[3] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for state <Sensor_Updates> */
	private void exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_() {
		/* Default exit sequence for state <Sensor_Updates> */
		stateVector[3] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT_;
		stateConfVectorPosition = 3;
		exitAction_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_SmartTrafficLightSystem_SensorComponent_off() {
		/* Default exit sequence for state off */
		stateVector[3] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 3;
		exitAction_main_region_SmartTrafficLightSystem_SensorComponent_off();
	}
	
	/* Default exit sequence for state <Initialize_WiFi_Component> */
	private void exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component_() {
		/* Default exit sequence for state <Initialize_WiFi_Component> */
		exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating();
		stateVector[4] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 4;
	}
	
	/* Default exit sequence for state <WiFi_Updates> */
	private void exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_() {
		/* Default exit sequence for state <WiFi_Updates> */
		stateVector[4] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT_;
		stateConfVectorPosition = 4;
		exitAction_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway_off() {
		/* Default exit sequence for state off */
		stateVector[4] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 4;
		exitAction_main_region_SmartTrafficLightSystem_WiFiGateway_off();
	}
	
	/* Default exit sequence for state <Initialize_Power_Component> */
	private void exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component_() {
		/* Default exit sequence for state <Initialize_Power_Component> */
		exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating();
		stateVector[5] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 5;
	}
	
	/* Default exit sequence for state <Power_Updates> */
	private void exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_() {
		/* Default exit sequence for state <Power_Updates> */
		stateVector[5] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT_;
		stateConfVectorPosition = 5;
		exitAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off() {
		/* Default exit sequence for state off */
		stateVector[5] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 5;
		exitAction_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off();
	}
	
	/* Default exit sequence for state <Initialize_DeviceTemp_Component> */
	private void exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component_() {
		/* Default exit sequence for state <Initialize_DeviceTemp_Component> */
		exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating();
		stateVector[6] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 6;
	}
	
	/* Default exit sequence for state <Temperature_Updates> */
	private void exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_() {
		/* Default exit sequence for state <Temperature_Updates> */
		stateVector[6] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT_;
		stateConfVectorPosition = 6;
		exitAction_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_();
	}
	
	/* Default exit sequence for state off */
	private void exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off() {
		/* Default exit sequence for state off */
		stateVector[6] = State.MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM;
		stateConfVectorPosition = 6;
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		/* Default exit sequence for region main region */
		switch (stateVector[0]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_OFF:
			exitSequence_main_region_SmartTrafficLightSystem_SystemStatus_off();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SYSTEMSTATUS_ON:
			exitSequence_main_region_SmartTrafficLightSystem_SystemStatus_on();
			break;
		default:
			break;
		}
		switch (stateVector[1]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__ACTUATOR_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT__DEVICE_FUNCTIONING_:
			exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_ACTUATORCOMPONENT_OFF:
			exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_off();
			break;
		default:
			break;
		}
		switch (stateVector[2]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT_:
			exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT_OFF:
			exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent_off();
			break;
		default:
			break;
		}
		switch (stateVector[3]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT_:
			exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT_OFF:
			exitSequence_main_region_SmartTrafficLightSystem_SensorComponent_off();
			break;
		default:
			break;
		}
		switch (stateVector[4]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT_:
			exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY_OFF:
			exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway_off();
			break;
		default:
			break;
		}
		switch (stateVector[5]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT_:
			exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT_OFF:
			exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off();
			break;
		default:
			break;
		}
		switch (stateVector[6]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT_:
			exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_();
			break;
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE_OFF:
			exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region updating */
	private void exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating() {
		/* Default exit sequence for region updating */
		switch (stateVector[2]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_CONTROLLERCOMPONENT__INITIALIZE_CONTROLLER_COMPONENT__UPDATING__CONTROLLER_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region updating */
	private void exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating() {
		/* Default exit sequence for region updating */
		switch (stateVector[3]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_SENSORCOMPONENT__INITIALIZE_SENSOR_COMPONENT__UPDATING__SENSOR_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region updating */
	private void exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating() {
		/* Default exit sequence for region updating */
		switch (stateVector[4]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_WIFIGATEWAY__INITIALIZE_WIFI_COMPONENT__UPDATING__WIFI_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region updating */
	private void exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating() {
		/* Default exit sequence for region updating */
		switch (stateVector[5]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_POWERCALCULATORCOMPONENT__INITIALIZE_POWER_COMPONENT__UPDATING__POWER_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region updating */
	private void exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating() {
		/* Default exit sequence for region updating */
		switch (stateVector[6]) {
		case MAIN_REGION_SMARTTRAFFICLIGHTSYSTEM_TRACKINGDEVICETEMPERATURE__INITIALIZE_DEVICETEMP_COMPONENT__UPDATING__TEMPERATURE_UPDATES_:
			exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_SystemStatus__entry_Default() {
		/* Default react sequence for initial entry  */
		getTrafficLight().enter();
		enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_ActuatorComponent__entry_Default() {
		/* Default react sequence for initial entry  */
		getActuator().enter();
		enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_ControllerComponent__entry_Default() {
		/* Default react sequence for initial entry  */
		getController().enter();
		enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates__default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_SensorComponent__entry_Default() {
		/* Default react sequence for initial entry  */
		getSensor().enter();
		enterSequence_main_region_SmartTrafficLightSystem_SensorComponent_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates__default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_WiFiGateway__entry_Default() {
		/* Default react sequence for initial entry  */
		getWiFi().enter();
		enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates__default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__entry_Default() {
		/* Default react sequence for initial entry  */
		getPower().enter();
		enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates__default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__entry_Default() {
		/* Default react sequence for initial entry  */
		getTemp().enter();
		enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates__default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_main_region_SmartTrafficLightSystem_default();
	}
	
	private long main_region_SmartTrafficLightSystem_SystemStatus_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (system.on) {
				exitSequence_main_region_SmartTrafficLightSystem_SystemStatus_off();
				enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_on_default();
				transitioned_after = 0l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_SystemStatus_on_react(long transitioned_before) {
		/* The reactions of state on. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<0l) {
			if (system.off) {
				exitSequence_main_region_SmartTrafficLightSystem_SystemStatus_on();
				enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_off_default();
				transitioned_after = 0l;
			} else {
				if (timeEvents[0]) {
					exitSequence_main_region_SmartTrafficLightSystem_SystemStatus_on();
					timeEvents[0] = false;
					enterSequence_main_region_SmartTrafficLightSystem_SystemStatus_on_default();
					transitioned_after = 0l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates__react(long transitioned_before) {
		/* The reactions of state <Actuator_Updates>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<1l) {
			if (getActuator().getIsTriggered()) {
				exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_();
				enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning__default();
				transitioned_after = 1l;
			} else {
				if (system.off) {
					exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_();
					enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_off_default();
					transitioned_after = 1l;
				} else {
					if (timeEvents[1]) {
						exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates_();
						timeEvents[1] = false;
						enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates__default();
						transitioned_after = 1l;
					}
				}
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning__react(long transitioned_before) {
		/* The reactions of state <Device_Functioning>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<1l) {
			if (!(getActuator().getIsTriggered())) {
				exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_();
				enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates__default();
				transitioned_after = 1l;
			} else {
				if (system.off) {
					exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Device_Functioning_();
					enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_off_default();
					transitioned_after = 1l;
				}
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			if (timeEvents[2]) {
				trafficLight.device().setCrossingButton_triggered(actuator.getIsTriggered());
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_ActuatorComponent_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<1l) {
			if (system.on) {
				exitSequence_main_region_SmartTrafficLightSystem_ActuatorComponent_off();
				enterSequence_main_region_SmartTrafficLightSystem_ActuatorComponent__Actuator_Updates__default();
				transitioned_after = 1l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__react(long transitioned_before) {
		/* The reactions of state <Initialize_Controller_Component>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<2l) {
			if (system.off) {
				exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component_();
				enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent_off_default();
				transitioned_after = 2l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates__react(long transitioned_before) {
		/* The reactions of state <Controller_Updates>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<2l) {
			if (timeEvents[3]) {
				exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates_();
				timeEvents[3] = false;
				enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__updating__Controller_Updates__default();
				main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__react(2l);
				transitioned_after = 2l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_ControllerComponent_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<2l) {
			if (system.on) {
				exitSequence_main_region_SmartTrafficLightSystem_ControllerComponent_off();
				enterSequence_main_region_SmartTrafficLightSystem_ControllerComponent__Initialize_Controller_Component__default();
				transitioned_after = 2l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__react(long transitioned_before) {
		/* The reactions of state <Initialize_Sensor_Component>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<3l) {
			if (system.off) {
				exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component_();
				enterSequence_main_region_SmartTrafficLightSystem_SensorComponent_off_default();
				transitioned_after = 3l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates__react(long transitioned_before) {
		/* The reactions of state <Sensor_Updates>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<3l) {
			if (timeEvents[4]) {
				exitSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates_();
				timeEvents[4] = false;
				enterSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__updating__Sensor_Updates__default();
				main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__react(3l);
				transitioned_after = 3l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_SensorComponent_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<3l) {
			if (system.on) {
				exitSequence_main_region_SmartTrafficLightSystem_SensorComponent_off();
				enterSequence_main_region_SmartTrafficLightSystem_SensorComponent__Initialize_Sensor_Component__default();
				transitioned_after = 3l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__react(long transitioned_before) {
		/* The reactions of state <Initialize_WiFi_Component>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<4l) {
			if (system.off) {
				exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component_();
				enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway_off_default();
				transitioned_after = 4l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates__react(long transitioned_before) {
		/* The reactions of state <WiFi_Updates>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<4l) {
			if (timeEvents[5]) {
				exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates_();
				timeEvents[5] = false;
				enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__updating__WiFi_Updates__default();
				main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__react(4l);
				transitioned_after = 4l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_WiFiGateway_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<4l) {
			if (system.on) {
				exitSequence_main_region_SmartTrafficLightSystem_WiFiGateway_off();
				enterSequence_main_region_SmartTrafficLightSystem_WiFiGateway__Initialize_WiFi_Component__default();
				transitioned_after = 4l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__react(long transitioned_before) {
		/* The reactions of state <Initialize_Power_Component>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<5l) {
			if (system.off) {
				exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component_();
				enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off_default();
				transitioned_after = 5l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates__react(long transitioned_before) {
		/* The reactions of state <Power_Updates>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<5l) {
			if (timeEvents[6]) {
				exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates_();
				timeEvents[6] = false;
				enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__updating__Power_Updates__default();
				main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__react(5l);
				transitioned_after = 5l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<5l) {
			if (system.on) {
				exitSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent_off();
				enterSequence_main_region_SmartTrafficLightSystem_PowerCalculatorComponent__Initialize_Power_Component__default();
				transitioned_after = 5l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__react(long transitioned_before) {
		/* The reactions of state <Initialize_DeviceTemp_Component>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<6l) {
			if (system.off) {
				exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component_();
				enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off_default();
				transitioned_after = 6l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates__react(long transitioned_before) {
		/* The reactions of state <Temperature_Updates>. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<6l) {
			if (timeEvents[7]) {
				exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates_();
				timeEvents[7] = false;
				enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__updating__Temperature_Updates__default();
				main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__react(6l);
				transitioned_after = 6l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off_react(long transitioned_before) {
		/* The reactions of state off. */
		long transitioned_after = transitioned_before;
		if (transitioned_after<6l) {
			if (system.on) {
				exitSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature_off();
				enterSequence_main_region_SmartTrafficLightSystem_trackingDeviceTemperature__Initialize_DeviceTemp_Component__default();
				transitioned_after = 6l;
			}
		}
		/* If no transition was taken */
		if (transitioned_after==transitioned_before) {
			/* then execute local reactions. */
			transitioned_after = transitioned_before;
		}
		return transitioned_after;
	}
	
	/* Can be used by the client code to trigger a run to completion step without raising an event. */
	public void triggerWithoutEvent() {
		runCycle();
	}
}
