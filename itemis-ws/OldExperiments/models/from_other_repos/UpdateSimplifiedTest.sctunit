testclass UpdateSimplifiedTest for statechart Update {
	@Test
	operation test00 () {
	    assert !is_active
	}

	@Test
	operation test01 () {
	    raise failed
	    assert !is_final
	}

	@Test
	operation test02 () {
	    raise complete
	    assert !is_active
	}

	@Test
	operation test06 () {
	    enter
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test07 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test08 () {
	    exit
	    assert !is_final
	}

	@Test
	operation test09 () {
	    assert !is_active
	    enter
	    raise connected
	    assert active (Update.main_region.Ping)
	}

	@Test
	operation test10 () {
	    assert !is_active
	}

	@Test
	operation test11 () {
	    assert !is_active
	}

	@Test
	operation test12 () {
	    assert !is_active
	}

	@Test
	operation test13 () {
	    assert !active (Update.main_region.Failed)
	    assert !is_active
	}

	@Test
	operation test14 () {
	    assert !is_active
	    assert !active (Update.main_region.Wait_Bootloader)
	}

	@Test
	operation test15 () {
	    assert !active (Update.main_region.Flash_Check)
	    assert !is_active
	}

	@Test
	operation test16 () {
	    assert !active (Update.main_region.Flash_Rest)
	    assert !is_active
	}

	@Test
	operation test17 () {
	    assert !active (Update.main_region.Flash_Complete_Page)
	    assert !is_active
	}

	@Test
	operation test18 () {
	    assert !active (Update.main_region.Flash_Request)
	    assert !is_active
	}

	@Test
	operation test19 () {
	    assert !active (Update.main_region.Reset)
	    assert !is_active
	}

	@Test
	operation test20 () {
	    assert !is_active
	    assert !active (Update.main_region.Ping)
	}

	@Test
	operation test22 () {
	    assert !is_active
	    enter
	    raise connected
	    raise connected
	    assert is_active
	}

	@Test
	operation test23 () {
	    assert !is_active
	}

	@Test
	operation test28 () {
	    enter
	    raise connected
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test29 () {
	    assert !is_active
	    enter
	    assert is_active
	}

	@Test
	operation test31 () {
	    assert !is_active
	    assert !is_final
	}

}