/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 05 14:09:24 GMT 2024
 */

package statechart;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import statechart.ExamplStcSimplified;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExamplStcSimplified_ESTest extends ExamplStcSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.triggerWithoutEvent();
      assertTrue(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raiseUsed1();
      examplStcSimplified0.raiseEnd_all();
      assertTrue(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.raiseAnalyze();
      examplStcSimplified0.raiseStart();
      examplStcSimplified0.raiseAnalyze();
      assertTrue(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raiseUsed1();
      assertTrue(examplStcSimplified0.isActive());
      
      examplStcSimplified0.exit();
      assertFalse(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.exit();
      assertFalse(examplStcSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.raiseAnalyze();
      assertTrue(examplStcSimplified0.isActive());
      
      examplStcSimplified0.exit();
      assertFalse(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      assertTrue(examplStcSimplified0.isActive());
      
      examplStcSimplified0.exit();
      assertFalse(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.OUT_REGION_OUT2;
      examplStcSimplified0.enter();
      examplStcSimplified0.raiseUsed1();
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertTrue(examplStcSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.OUT_REGION_OUT1;
      examplStcSimplified0.enter();
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertTrue(examplStcSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012_R___1_AN1;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertTrue(examplStcSimplified0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertTrue(examplStcSimplified0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_OFF_;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertTrue(examplStcSimplified0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.$NULLSTATE$;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.OUT_REGION_OUT2;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.OUT_REGION_OUT1;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012_R_2_AN2_B;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_SIMPLIFIED_ANALYSES012_R_2_AN2_A;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_CHILL;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION__FINAL_;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0__FINAL_;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_END_ANALYSES;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_INIT_ANALYSES;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_ON_R_0_WORKING;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_IDLE;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      ExamplStcSimplified.State examplStcSimplified_State0 = ExamplStcSimplified.State.MAIN_REGION_OFF_;
      boolean boolean0 = examplStcSimplified0.isStateActive(examplStcSimplified_State0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.raiseWork();
      examplStcSimplified0.raiseA();
      assertTrue(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      boolean boolean0 = examplStcSimplified0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      assertFalse(examplStcSimplified0.isActive());
      
      examplStcSimplified0.enter();
      boolean boolean0 = examplStcSimplified0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.raiseAnalyze();
      examplStcSimplified0.raiseEnd_all();
      assertTrue(examplStcSimplified0.isActive());
      
      examplStcSimplified0.exit();
      assertFalse(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.raiseWork();
      assertTrue(examplStcSimplified0.isActive());
      
      examplStcSimplified0.exit();
      assertFalse(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.raiseNotUsed1();
      assertFalse(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.raiseB12W();
      assertFalse(examplStcSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.raiseNotUsed2();
      assertFalse(examplStcSimplified0.isFinal());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.raiseEnd();
      assertFalse(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      examplStcSimplified0.enter();
      examplStcSimplified0.raiseUsed1();
      examplStcSimplified0.raiseUsed2();
      assertTrue(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      boolean boolean0 = examplStcSimplified0.isFinal();
      assertFalse(examplStcSimplified0.isActive());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      assertFalse(examplStcSimplified0.isActive());
      
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.raiseAnalyze();
      examplStcSimplified0.raiseEnd_all();
      examplStcSimplified0.raiseNotUsed3();
      assertTrue(examplStcSimplified0.isActive());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ExamplStcSimplified examplStcSimplified0 = new ExamplStcSimplified();
      assertFalse(examplStcSimplified0.isActive());
      
      examplStcSimplified0.enter();
      examplStcSimplified0.raisePower_on();
      examplStcSimplified0.raiseAnalyze();
      examplStcSimplified0.raiseStart();
      examplStcSimplified0.raiseB12W();
      examplStcSimplified0.raiseAnalyze();
      assertTrue(examplStcSimplified0.isActive());
  }
}
